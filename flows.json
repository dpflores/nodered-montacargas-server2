[
    {
        "id": "abf430ab9cfee905",
        "type": "tab",
        "label": "INIT",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "4d53ee97ad0311a6",
        "type": "tab",
        "label": "DATA",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c767b22b0c185339",
        "type": "tab",
        "label": "HTTP",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "63965d808ff1bb6e",
        "type": "subflow",
        "name": "system status ",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 220,
                "y": 180,
                "wires": [
                    {
                        "id": "6b7a1e2406578c48"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1120,
                "y": 280,
                "wires": [
                    {
                        "id": "06bf9a8fac38414e",
                        "port": 0
                    },
                    {
                        "id": "a267e43e7b0ff1fe",
                        "port": 0
                    },
                    {
                        "id": "5b625da5e955d153",
                        "port": 0
                    },
                    {
                        "id": "be18eb5899ee3bb4",
                        "port": 0
                    },
                    {
                        "id": "51d003316aedeaf9",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 1120,
            "y": 40,
            "wires": [
                {
                    "id": "a6149ee2a5074191",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "dc275690.07356",
        "type": "subflow",
        "name": "scheduler",
        "info": "A scheduler that repeatedly executes\nschedules put in as an array of objects\nas a ```msg.payload``` in the format of:\n```\n[\n  {\n    \"item\": \"test\",\n    \"command\": \"ON\",\n    \"time\": \"08:30\"\n  },\n  {\n    \"item\": \"test\",\n    \"command\": \"OFF\",\n    \"time\": \"19:45\"\n  }\n]\n```\nEach schedule object can also contain an optional ```days``` property:\n```\n  {\n    \"item\": \"test\",\n    \"command\": \"ON\",\n    \"days\": [1,2,6,7],\n    \"time\": \"08:30\"\n  }\n```\nthe ```days property``` has the format of\nan array. Each day that the schedule object \nshould be executed on has to be in the array.\nThe week starts with monday(1) and ends with\nsunday(7). So the example above would only be\nexecuted on monday, tuesday, saturday and\nsunday.\nYou can mix objects with and without a\ndays property in one schedule array.\n\nSending an **empty array** as a\n```msg.payload``` to the subflow will\nreset it.\nThe second output is a debug.\nSending a ```msg.payload``` string of **\"debug\"**\nwill send an object of the schedule and the\ncorresponding timers that are scheduled\nto this output.\nAt schedule time a ```msg``` object will be send\nfrom the first output. The command will be\npassed as the ```msg.payload```, the item in\n```msg.item``` and the original schedule object\nin ```msg.original```.\nThe subflows status will show the next item to \nbe executed once a schedule is set.",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 180,
                "wires": [
                    {
                        "id": "be194cd9.78b218"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1720,
                "y": 180,
                "wires": [
                    {
                        "id": "8eb795c0.24899",
                        "port": 0
                    }
                ]
            },
            {
                "x": 560,
                "y": 120,
                "wires": [
                    {
                        "id": "6680ab33.f83b5c",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#FFAAAA",
        "inputLabels": [
            "schedule input"
        ],
        "outputLabels": [
            "command output",
            ""
        ],
        "icon": "node-red/timer.svg",
        "status": {
            "x": 1320,
            "y": 360,
            "wires": [
                {
                    "id": "a0ba0058.4cf528",
                    "port": 0
                },
                {
                    "id": "3bf2be21.9401aa",
                    "port": 1
                }
            ]
        }
    },
    {
        "id": "a383835818b7681a",
        "type": "group",
        "z": "4d53ee97ad0311a6",
        "name": "Guardado de data local",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "3c0cf9d7b9fc8d32",
            "1e54bc9422fc9d45",
            "1a91beaae3b7c29f",
            "0144841910857dd0",
            "dccf3ef5f5ffab03",
            "be1b9be609783b77",
            "78cd71d4d4914aab"
        ],
        "x": 414,
        "y": 459,
        "w": 862,
        "h": 142
    },
    {
        "id": "1b5ad41c50a916b7",
        "type": "group",
        "z": "4d53ee97ad0311a6",
        "name": "DELETE ALL DATA MANUALLY (CAREFULL)",
        "style": {
            "label": true
        },
        "nodes": [
            "72985e3e1550e70a",
            "0259792c6364af43",
            "1ad32e19c0123f3c"
        ],
        "x": 174,
        "y": 679,
        "w": 572,
        "h": 82
    },
    {
        "id": "20aa6fa811d70d43",
        "type": "MySQLdatabase",
        "name": "",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "acme_db",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "9bcbb125a6d88775",
        "type": "mqtt-broker",
        "name": "ACME_broker",
        "broker": "161.132.39.167",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "1740ff9b61df35b5",
        "type": "mqtt-broker",
        "name": "",
        "broker": "127.0.0.1",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "06bf9a8fac38414e",
        "type": "change",
        "z": "63965d808ff1bb6e",
        "name": "1 - Inoperativo",
        "rules": [
            {
                "t": "set",
                "p": "payload.data.status",
                "pt": "msg",
                "to": "1",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "payload.data.general_status",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 60,
        "wires": [
            [
                "a6149ee2a5074191"
            ]
        ]
    },
    {
        "id": "51d003316aedeaf9",
        "type": "change",
        "z": "63965d808ff1bb6e",
        "name": "2 - En espera sin carga",
        "rules": [
            {
                "t": "set",
                "p": "payload.data.status",
                "pt": "msg",
                "to": "2",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "payload.data.general_status",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 560,
        "wires": [
            [
                "a6149ee2a5074191"
            ]
        ]
    },
    {
        "id": "be18eb5899ee3bb4",
        "type": "change",
        "z": "63965d808ff1bb6e",
        "name": "3 - En espera con carga",
        "rules": [
            {
                "t": "set",
                "p": "payload.data.status",
                "pt": "msg",
                "to": "3",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "payload.data.general_status",
                "pt": "msg",
                "to": "1",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 440,
        "wires": [
            [
                "a6149ee2a5074191"
            ]
        ]
    },
    {
        "id": "5b625da5e955d153",
        "type": "change",
        "z": "63965d808ff1bb6e",
        "name": "4 - Traslado sin carga",
        "rules": [
            {
                "t": "set",
                "p": "payload.data.status",
                "pt": "msg",
                "to": "4",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "payload.data.general_status",
                "pt": "msg",
                "to": "1",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 340,
        "wires": [
            [
                "a6149ee2a5074191"
            ]
        ]
    },
    {
        "id": "a267e43e7b0ff1fe",
        "type": "change",
        "z": "63965d808ff1bb6e",
        "name": "5 - Efectivo",
        "rules": [
            {
                "t": "set",
                "p": "payload.data.status",
                "pt": "msg",
                "to": "5",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "payload.data.general_status",
                "pt": "msg",
                "to": "1",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 240,
        "wires": [
            [
                "a6149ee2a5074191"
            ]
        ]
    },
    {
        "id": "6b7a1e2406578c48",
        "type": "switch",
        "z": "63965d808ff1bb6e",
        "name": "mantto?",
        "property": "payload.data.mantto",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 380,
        "y": 180,
        "wires": [
            [
                "06bf9a8fac38414e"
            ],
            [
                "298f1b9461d4fa63"
            ]
        ]
    },
    {
        "id": "298f1b9461d4fa63",
        "type": "switch",
        "z": "63965d808ff1bb6e",
        "name": "movement?",
        "property": "payload.data.gps.speed",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 490,
        "y": 360,
        "wires": [
            [
                "7dd0a7fe3080f78e"
            ],
            [
                "dad146a727a20f0d"
            ]
        ]
    },
    {
        "id": "7dd0a7fe3080f78e",
        "type": "switch",
        "z": "63965d808ff1bb6e",
        "name": "load?",
        "property": "payload.data.load",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0.1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 630,
        "y": 280,
        "wires": [
            [
                "a267e43e7b0ff1fe"
            ],
            [
                "5b625da5e955d153"
            ]
        ]
    },
    {
        "id": "dad146a727a20f0d",
        "type": "switch",
        "z": "63965d808ff1bb6e",
        "name": "load?",
        "property": "payload.data.load",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0.1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 630,
        "y": 500,
        "wires": [
            [
                "be18eb5899ee3bb4"
            ],
            [
                "51d003316aedeaf9"
            ]
        ]
    },
    {
        "id": "a6149ee2a5074191",
        "type": "function",
        "z": "63965d808ff1bb6e",
        "name": "function 2",
        "func": "msg.payload = msg.payload.data.status\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "f476595.aa436a8",
        "type": "function",
        "z": "dc275690.07356",
        "name": "schedule function",
        "func": "const schedule = msg.payload;\nif(typeof msg.payload === \"undefined\") return null;\nlet scheduled = context.scheduled || [];\nlet todelete = [];\nscheduled.forEach((item,index) => {\n    if(!schedule.some(element => JSON.stringify(element) == JSON.stringify(item.schedule))){\n        clearTimeout(item.timer);\n        todelete.push(index);\n    }\n})\nscheduled = scheduled.filter((item,index) => !todelete.includes(index));\ncontext.scheduled = scheduled;\nschedule.forEach(element => {\n    const execute = element;\n    const time = new Date();\n    const timestamp = time.getTime();\n    const hour = time.getHours();\n    const minute = time.getMinutes();\n    const year = time.getFullYear();\n    const month = time.getMonth();\n    const day = time.getDate();\n    const inputS = execute.time.split(\":\");\n    const hourS = parseInt(inputS[0]);\n    const minuteS = parseInt(inputS[1]);\n    if(typeof hourS != \"number\" || typeof minuteS != \"number\") return null;\n    const timeS = new Date(year, month, day, hourS, minuteS);\n    const timestampS = timeS.getTime();\n    let timestampD = 0;\n    if(timestampS >= timestamp){\n        timestampD = timestampS - timestamp;\n    } else {\n        timestampD = (timestampS + 86400000) - timestamp;\n    }\n    let oldscheduled = context.scheduled;\n    if(!oldscheduled.some(element => JSON.stringify(element.schedule) == JSON.stringify(execute))){\n        const newtimer = setTimeout(()=>{\n            let newscheduled = context.scheduled;\n            const deleteindex = newscheduled.indexOf(newschedule);\n            newscheduled.splice(deleteindex,1);\n            node.send({payload:newschedule.schedule});\n            context.scheduled = newscheduled;\n        },timestampD);\n        const newschedule = {\n            runtime: timestampD,\n            timer: newtimer,\n            schedule: execute\n        };\n        oldscheduled.push(newschedule);\n        context.scheduled = oldscheduled;\n    }\n});\nconst sendscheduled = context.scheduled;\nmsg.topic = \"scheduled\";\nconst newmsg = sendscheduled.map(item => {\n    return {schedule:item.schedule,runtime:item.runtime}\n});\nmsg.payload = newmsg;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 180,
        "wires": [
            [
                "cd6382ee.28d1c8"
            ]
        ]
    },
    {
        "id": "a0ba0058.4cf528",
        "type": "function",
        "z": "dc275690.07356",
        "name": "get next schedule item",
        "func": "const schedule = flow.get(\"schedule\") || [];\nif(schedule.length === 0){\n    msg.payload = \"no schedule yet\";\n    return msg;\n}\nconst time = new Date();\nconst dayNames = [\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\",\"Sunday\"];\nlet day = time.getDay();\nif (day === 0) { day = 7; }\nlet hour = String(time.getHours());\nlet minute = String(time.getMinutes());\nif(hour.length == 1) hour = \"0\" + hour;\nif(minute.length == 1) minute = \"0\" + minute;\nlet hmtime = hour + \":\" + minute;\nlet found = false;\nlet nextindex = 0;\nfor(let a=0; a<7; a++){\n    for(i=0;i<schedule.length;i++){\n        if(hmtime < schedule[i].time){\n            if(schedule[i].hasOwnProperty(\"days\")){\n                if(schedule[i].days.includes(day)){\n                    nextindex = i;\n                    found = true;\n                    break;\n                } else {\n                    continue;\n                }\n            } else {\n                nextindex = i;\n                found = true;\n                break;\n            }\n        } else {\n            continue;\n        }\n    }\n    if(found){break;}\n    if(a === 0){ hmtime = \"\"; }\n    if (day < 7) {\n        day += 1;\n    } else {\n        day = 1;\n    }\n}\nmsg.payload = schedule[nextindex].item + \", \" + schedule[nextindex].command + \", \" + dayNames[day-1] + \", \" + schedule[nextindex].time;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 8,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "7f1ec532.7fc8bc",
        "type": "function",
        "z": "dc275690.07356",
        "name": "sort schedule and save to flow",
        "func": "const oldschedule = msg.payload;\nlet newschedule = [];\noldschedule.forEach(element => {\n    let newindex = null;\n    if(newschedule.length > 0){\n        for(i=0;i<newschedule.length-1;i++){\n            if(element.time >= newschedule[i].time && element.time < newschedule[i+1].time){\n                newindex = i+1;\n            }\n        }\n        if(newindex !== null){\n            newschedule.splice(newindex,0,element);\n        } else if (element.time < newschedule[0].time){\n            newschedule.splice(0,0,element);\n        } else {\n            newschedule.push(element);\n        }\n    } else {\n        newschedule.push(element);\n    }\n});\nflow.set(\"schedule\",newschedule);\nmsg.payload = newschedule;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 7,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 180,
        "wires": [
            [
                "a0ba0058.4cf528",
                "f476595.aa436a8"
            ]
        ]
    },
    {
        "id": "694a5ae3.e4714c",
        "type": "inject",
        "z": "dc275690.07356",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 410,
        "y": 360,
        "wires": [
            [
                "a0ba0058.4cf528",
                "cf9ed7a2.81f21"
            ]
        ]
    },
    {
        "id": "be194cd9.78b218",
        "type": "switch",
        "z": "dc275690.07356",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "debug",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 210,
        "y": 180,
        "wires": [
            [
                "6680ab33.f83b5c"
            ],
            [
                "3bf2be21.9401aa"
            ]
        ]
    },
    {
        "id": "8eb795c0.24899",
        "type": "change",
        "z": "dc275690.07356",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "original",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "original.command",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "item",
                "pt": "msg",
                "to": "original.item",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1560,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "cd6382ee.28d1c8",
        "type": "switch",
        "z": "dc275690.07356",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "scheduled",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1150,
        "y": 180,
        "wires": [
            [
                "7e108ed9.acbd88"
            ],
            [
                "a0ba0058.4cf528",
                "280402d5.27b2f6",
                "ab8f82a4.0079b"
            ]
        ]
    },
    {
        "id": "6680ab33.f83b5c",
        "type": "change",
        "z": "dc275690.07356",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "payload.schedule",
                "pt": "msg",
                "to": "schedule",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "payload.scheduled",
                "pt": "msg",
                "to": "scheduled",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "cf9ed7a2.81f21",
        "type": "trigger",
        "z": "dc275690.07356",
        "name": "",
        "op1": "[]",
        "op2": "schedule",
        "op1type": "json",
        "op2type": "flow",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 760,
        "y": 240,
        "wires": [
            [
                "f476595.aa436a8"
            ]
        ]
    },
    {
        "id": "7e108ed9.acbd88",
        "type": "change",
        "z": "dc275690.07356",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "scheduled",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "280402d5.27b2f6",
        "type": "trigger",
        "z": "dc275690.07356",
        "name": "",
        "op1": "",
        "op2": "schedule",
        "op1type": "nul",
        "op2type": "flow",
        "duration": "1",
        "extend": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "outputs": 1,
        "x": 960,
        "y": 120,
        "wires": [
            [
                "f476595.aa436a8"
            ]
        ]
    },
    {
        "id": "ab8f82a4.0079b",
        "type": "function",
        "z": "dc275690.07356",
        "name": "today?",
        "func": "if (msg.payload.hasOwnProperty(\"days\")) {\n    const date = new Date();\n    let day = date.getDay();\n    if (day === 0) { day = 7; }\n    if (msg.payload.days.includes(day)) {\n        return msg;\n    } else {\n        return null;\n    }\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 180,
        "wires": [
            [
                "8eb795c0.24899"
            ]
        ]
    },
    {
        "id": "3bf2be21.9401aa",
        "type": "function",
        "z": "dc275690.07356",
        "name": "validate input",
        "func": "let errorMsg = \"\";\nif(!Array.isArray(msg.payload)) {\n    errorMsg = \"msg.payload should be an array of schedule items\";\n    node.warn(errorMsg)\n    msg.payload = errorMsg;\n    return [null, msg];\n}\nfor(i=0;i<msg.payload.length;i++){\n    if(typeof msg.payload[i] !== \"object\") {\n        errorMsg = \"each array item should be an object\";\n        node.warn(errorMsg)\n        msg.payload = errorMsg;\n        return [null, msg];\n    }\n    if(!msg.payload[i].hasOwnProperty(\"item\") || !msg.payload[i].hasOwnProperty(\"command\") || !msg.payload[i].hasOwnProperty(\"time\")) {\n        errorMsg = \"each array item should contain a item, a command and time property\";\n        node.warn(errorMsg)\n        msg.payload = errorMsg;\n        return [null, msg];\n    }\n    if(typeof msg.payload[i].item !== \"string\") {\n        errorMsg = \"the items in each schedule should be given as a string\";\n        node.warn(errorMsg)\n        msg.payload = errorMsg;\n        return [null, msg];\n    }\n    if(typeof msg.payload[i].command !== \"string\" && typeof msg.payload[i].command !== \"number\" && typeof msg.payload[i].command !== \"boolean\") {\n        errorMsg = \"the commands in each schedule should be given as a string or a number\";\n        node.warn(errorMsg)\n        msg.payload = errorMsg;\n        return [null, msg];\n    }\n    if(!msg.payload[i].time.match(/[0-2]\\d\\:[0-5]\\d/g)) {\n        errorMsg = \"the time should be in hh:mm 24 hour format\";\n        node.warn(errorMsg)\n        msg.payload = errorMsg;\n        return [null, msg];\n    }\n    if(msg.payload[i].hasOwnProperty(\"days\")) {\n        if(!Array.isArray(msg.payload[i].days)) {\n            errorMsg = \"days should be given as an array of integers\";\n            node.warn(errorMsg)\n            msg.payload = errorMsg;\n            return [null, msg];\n        }\n        for(let c=0; c<msg.payload[i].days.length; c++){\n            if(typeof msg.payload[i].days[c] !== \"number\"){\n                errorMsg = \"days should be given as integers of type number\";\n                node.warn(errorMsg)\n                msg.payload = errorMsg;\n                return [null, msg];\n            }\n            if(msg.payload[i].days[c] < 1 || msg.payload[i].days[c] > 7){\n                errorMsg = \"days should be in the range of 1-7\";\n                node.warn(errorMsg)\n                msg.payload = errorMsg;\n                return [null, msg];\n            }\n        }\n    }\n}\nreturn [msg, null];",
        "outputs": 2,
        "timeout": "",
        "noerr": 18,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 180,
        "wires": [
            [
                "7f1ec532.7fc8bc"
            ],
            [
                "ead6c623.14ffd"
            ]
        ]
    },
    {
        "id": "ead6c623.14ffd",
        "type": "trigger",
        "z": "dc275690.07356",
        "name": "",
        "op1": "",
        "op2": "1",
        "op1type": "nul",
        "op2type": "str",
        "duration": "2",
        "extend": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "outputs": 1,
        "x": 760,
        "y": 300,
        "wires": [
            [
                "a0ba0058.4cf528"
            ]
        ]
    },
    {
        "id": "c3d19c6f376bc860",
        "type": "inject",
        "z": "abf430ab9cfee905",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "47aa21e090081df4",
        "type": "change",
        "z": "abf430ab9cfee905",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "live_data",
                "pt": "global",
                "to": "{\"gateway_key\":\"\",\"timestamp\":0,\"data\":{\"gps\":{\"pos_valid\":0,\"latitude\":0,\"longitude\":0,\"altitude\":0,\"haccuracy\":5304419,\"speed\":0,\"course\":0},\"mantto\":\"0\",\"running\":\"0\",\"hourmeter\":0,\"battery\":{\"voltage\":0},\"pressure\":{\"current\":0},\"load\":0,\"status\":0}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "e7dbfe52c5a56dda",
        "type": "change",
        "z": "abf430ab9cfee905",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "init_hour",
                "pt": "global",
                "to": "payload[0].json",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "c9ba55fba965e6e8",
        "type": "inject",
        "z": "abf430ab9cfee905",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 240,
        "wires": [
            [
                "3a95b8e928820723",
                "4eb2630149384011"
            ]
        ]
    },
    {
        "id": "3a95b8e928820723",
        "type": "function",
        "z": "abf430ab9cfee905",
        "name": "function 5",
        "func": "msg.topic = 'SELECT * FROM `persistent_data` WHERE `tag`= \"init_hour\";';\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 220,
        "wires": [
            [
                "187f4d75698b331b"
            ]
        ]
    },
    {
        "id": "4eb2630149384011",
        "type": "function",
        "z": "abf430ab9cfee905",
        "name": "function 6",
        "func": "msg.topic = 'SELECT * FROM `persistent_data` WHERE `tag`= \"end_hour\";';\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 280,
        "wires": [
            [
                "26a3d75bbb7c8650"
            ]
        ]
    },
    {
        "id": "51b7029a3f84e81b",
        "type": "change",
        "z": "abf430ab9cfee905",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "end_hour",
                "pt": "global",
                "to": "payload[0].json",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "187f4d75698b331b",
        "type": "mysql",
        "z": "abf430ab9cfee905",
        "mydb": "20aa6fa811d70d43",
        "name": "",
        "x": 440,
        "y": 220,
        "wires": [
            [
                "e7dbfe52c5a56dda",
                "f3bfb38cca3f4fe9"
            ]
        ]
    },
    {
        "id": "26a3d75bbb7c8650",
        "type": "mysql",
        "z": "abf430ab9cfee905",
        "mydb": "20aa6fa811d70d43",
        "name": "",
        "x": 440,
        "y": 280,
        "wires": [
            [
                "51b7029a3f84e81b"
            ]
        ]
    },
    {
        "id": "f3bfb38cca3f4fe9",
        "type": "debug",
        "z": "abf430ab9cfee905",
        "name": "debug 12",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 140,
        "wires": []
    },
    {
        "id": "a5111d94f7361a1b",
        "type": "mqtt in",
        "z": "4d53ee97ad0311a6",
        "name": "",
        "topic": "data/combined",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "9bcbb125a6d88775",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 120,
        "y": 120,
        "wires": [
            [
                "7fde61273056b93f",
                "3ce50b04078d067d"
            ]
        ]
    },
    {
        "id": "7ae3fe0e8c7c7fd3",
        "type": "mqtt in",
        "z": "4d53ee97ad0311a6",
        "name": "",
        "topic": "data/offline/save",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "9bcbb125a6d88775",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 80,
        "y": 320,
        "wires": [
            [
                "07f477896215c16f",
                "f8474f24c89f9cf0"
            ]
        ]
    },
    {
        "id": "3c0cf9d7b9fc8d32",
        "type": "function",
        "z": "4d53ee97ad0311a6",
        "g": "a383835818b7681a",
        "name": "function 1",
        "func": "\nmsg.topic = \"INSERT INTO `local_data` (`date`, `data`) VALUES (FROM_UNIXTIME(\" + msg.timestamp/1000 + \"),'\"+ msg.payload + \"');\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 560,
        "wires": [
            [
                "0144841910857dd0",
                "1e54bc9422fc9d45"
            ]
        ]
    },
    {
        "id": "1e54bc9422fc9d45",
        "type": "mysql",
        "z": "4d53ee97ad0311a6",
        "g": "a383835818b7681a",
        "mydb": "20aa6fa811d70d43",
        "name": "",
        "x": 1190,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "1a91beaae3b7c29f",
        "type": "json",
        "z": "4d53ee97ad0311a6",
        "g": "a383835818b7681a",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 810,
        "y": 560,
        "wires": [
            [
                "3c0cf9d7b9fc8d32"
            ]
        ]
    },
    {
        "id": "0144841910857dd0",
        "type": "debug",
        "z": "4d53ee97ad0311a6",
        "g": "a383835818b7681a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 520,
        "wires": []
    },
    {
        "id": "dccf3ef5f5ffab03",
        "type": "debug",
        "z": "4d53ee97ad0311a6",
        "g": "a383835818b7681a",
        "name": "debug 1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 500,
        "wires": []
    },
    {
        "id": "be1b9be609783b77",
        "type": "function",
        "z": "4d53ee97ad0311a6",
        "g": "a383835818b7681a",
        "name": "Filter local data",
        "func": "let out_data = {}\n\nmsg.timestamp = msg.payload.timestamp;\nout_data.timestamp = msg.payload.timestamp;\nout_data.latitude = msg.payload.data.gps.latitude;\nout_data.longitude = msg.payload.data.gps.longitude;\nout_data.velocidad = msg.payload.data.gps.speed;\nout_data.carga = msg.payload.data.load;\nout_data.bateria = msg.payload.data.battery.voltage;\n// out_data.presion_bar = msg.payload.pressure_bar;\n// out_data.presion_psi = msg.payload.pressure_psi;\nout_data.state = msg.payload.data.status;\nout_data.gstate = msg.payload.data.general_status;\n\n// out_data.estado =\nmsg.payload = out_data;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 560,
        "wires": [
            [
                "dccf3ef5f5ffab03",
                "1a91beaae3b7c29f"
            ]
        ]
    },
    {
        "id": "72985e3e1550e70a",
        "type": "inject",
        "z": "4d53ee97ad0311a6",
        "g": "1b5ad41c50a916b7",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 280,
        "y": 720,
        "wires": [
            [
                "0259792c6364af43"
            ]
        ]
    },
    {
        "id": "0259792c6364af43",
        "type": "function",
        "z": "4d53ee97ad0311a6",
        "g": "1b5ad41c50a916b7",
        "name": "DELETE ALL",
        "func": "\nmsg.topic = `\n  DELETE FROM local_data;\n`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 720,
        "wires": [
            [
                "1ad32e19c0123f3c"
            ]
        ]
    },
    {
        "id": "1ad32e19c0123f3c",
        "type": "mysql",
        "z": "4d53ee97ad0311a6",
        "g": "1b5ad41c50a916b7",
        "mydb": "20aa6fa811d70d43",
        "name": "",
        "x": 660,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "e3472658b9dd67fe",
        "type": "debug",
        "z": "4d53ee97ad0311a6",
        "name": "debug 3",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 240,
        "wires": []
    },
    {
        "id": "61ad8801fa7fb43c",
        "type": "function",
        "z": "4d53ee97ad0311a6",
        "name": "last message",
        "func": "\nfunction unixTimestampToHumanReadable(unixTimestamp) {\n  const date = new Date(unixTimestamp);\n  const year = date.getFullYear();\n  const month = (date.getMonth() + 1).toString().padStart(2, '0');\n  const day = date.getDate().toString().padStart(2, '0');\n  const hours = date.getHours().toString().padStart(2, '0');\n  const minutes = date.getMinutes().toString().padStart(2, '0');\n  const seconds = date.getSeconds().toString().padStart(2, '0');\n\n  return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\n}\n\n\nif (msg.payload.timestamp){\nnode.status({ fill: \"green\", shape: \"ring\", text: `${unixTimestampToHumanReadable(msg.payload.timestamp)}`});\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "6b7ae4d6d10b73c4",
        "type": "function",
        "z": "4d53ee97ad0311a6",
        "name": "last message",
        "func": "\nfunction unixTimestampToHumanReadable(unixTimestamp) {\n  const date = new Date(unixTimestamp);\n  const year = date.getFullYear();\n  const month = (date.getMonth() + 1).toString().padStart(2, '0');\n  const day = date.getDate().toString().padStart(2, '0');\n  const hours = date.getHours().toString().padStart(2, '0');\n  const minutes = date.getMinutes().toString().padStart(2, '0');\n  const seconds = date.getSeconds().toString().padStart(2, '0');\n\n  return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\n}\n\nif (msg.payload.timestamp){\nnode.status({ fill: \"green\", shape: \"ring\", text: `${unixTimestampToHumanReadable(msg.payload.timestamp)}`});\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "f8474f24c89f9cf0",
        "type": "switch",
        "z": "4d53ee97ad0311a6",
        "name": "Filter Gateway",
        "property": "payload.gateway_key",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "A13Q6Q",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A13CHH",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A13CF8",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 300,
        "y": 320,
        "wires": [
            [],
            [],
            [
                "6b7ae4d6d10b73c4",
                "9c757b4537f3dedf"
            ]
        ]
    },
    {
        "id": "3ce50b04078d067d",
        "type": "switch",
        "z": "4d53ee97ad0311a6",
        "name": "Filter Gateway",
        "property": "payload.gateway_key",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "A13CHH",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A13Q6Q",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A13CF8",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 320,
        "y": 120,
        "wires": [
            [],
            [],
            [
                "61ad8801fa7fb43c",
                "d096a76f127de332",
                "0d808f5197888b57"
            ]
        ]
    },
    {
        "id": "d096a76f127de332",
        "type": "timeout",
        "z": "4d53ee97ad0311a6",
        "name": "Connection Timeout",
        "outtopic": "",
        "outsafe": "connected",
        "outwarning": "disconnected",
        "outunsafe": "shutdown",
        "warning": "60",
        "timer": "600",
        "repeat": false,
        "again": false,
        "x": 540,
        "y": 60,
        "wires": [
            [
                "16cb2f6ab8de4f88",
                "d613537e97ea8c01"
            ]
        ]
    },
    {
        "id": "0d808f5197888b57",
        "type": "function",
        "z": "4d53ee97ad0311a6",
        "name": "Getting the load from current",
        "func": "var data_json = msg.payload;\nvar current = data_json.data.pressure.current;\nvar est_linear_load = (0.524*current/1000) - 2.92\ndata_json.data.load = Math.max(est_linear_load,0) ;\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 120,
        "wires": [
            [
                "bdbcbf2604da944c"
            ]
        ]
    },
    {
        "id": "bdbcbf2604da944c",
        "type": "subflow:63965d808ff1bb6e",
        "z": "4d53ee97ad0311a6",
        "name": "",
        "x": 800,
        "y": 160,
        "wires": [
            [
                "e3472658b9dd67fe",
                "1eb8537850904cea",
                "5bef7810bb446303"
            ]
        ]
    },
    {
        "id": "b9a8df8301b776a3",
        "type": "subflow:63965d808ff1bb6e",
        "z": "4d53ee97ad0311a6",
        "name": "",
        "x": 800,
        "y": 320,
        "wires": [
            [
                "0dbd5db4020576db"
            ]
        ]
    },
    {
        "id": "9c757b4537f3dedf",
        "type": "function",
        "z": "4d53ee97ad0311a6",
        "name": "Getting the load from current",
        "func": "var data_json = msg.payload;\n\nvar current = data_json.data.pressure.current;\nvar est_linear_load = (0.524*current/1000) - 2.92\ndata_json.data.load = Math.max(est_linear_load,0) ;\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 320,
        "wires": [
            [
                "b9a8df8301b776a3"
            ]
        ]
    },
    {
        "id": "16cb2f6ab8de4f88",
        "type": "debug",
        "z": "4d53ee97ad0311a6",
        "name": "debug 5",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 120,
        "wires": []
    },
    {
        "id": "1eb8537850904cea",
        "type": "change",
        "z": "4d53ee97ad0311a6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "live_data",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1050,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "c32b768a1ed92874",
        "type": "switch",
        "z": "4d53ee97ad0311a6",
        "name": "mantto?",
        "property": "payload.data.mantto",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1080,
        "y": 20,
        "wires": [
            [
                "b1a48dbfdde4df47"
            ],
            [
                "36225553bf8cc8a3"
            ]
        ]
    },
    {
        "id": "203c28e32ea9410f",
        "type": "function",
        "z": "4d53ee97ad0311a6",
        "name": "Get last data",
        "func": "var data_json = global.get(\"live_data\");\n\ndata_json.timestamp = Date.now();\n\nmsg.payload = data_json;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 20,
        "wires": [
            [
                "c32b768a1ed92874"
            ]
        ]
    },
    {
        "id": "b1a48dbfdde4df47",
        "type": "change",
        "z": "4d53ee97ad0311a6",
        "name": "1 - Inoperativo",
        "rules": [
            {
                "t": "set",
                "p": "payload.data.status",
                "pt": "msg",
                "to": "1",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "payload.data.general_status",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1260,
        "y": 20,
        "wires": [
            [
                "c8d60c4ef86f2d66"
            ]
        ]
    },
    {
        "id": "36225553bf8cc8a3",
        "type": "change",
        "z": "4d53ee97ad0311a6",
        "name": "0 - Apagado",
        "rules": [
            {
                "t": "set",
                "p": "payload.data.general_status",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "payload.data.status",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1250,
        "y": 60,
        "wires": [
            [
                "c8d60c4ef86f2d66"
            ]
        ]
    },
    {
        "id": "78cd71d4d4914aab",
        "type": "link in",
        "z": "4d53ee97ad0311a6",
        "g": "a383835818b7681a",
        "name": "save_database",
        "links": [
            "0dbd5db4020576db",
            "5bef7810bb446303",
            "c8d60c4ef86f2d66",
            "b840f2b36dafec2c"
        ],
        "x": 455,
        "y": 560,
        "wires": [
            [
                "be1b9be609783b77"
            ]
        ]
    },
    {
        "id": "0dbd5db4020576db",
        "type": "link out",
        "z": "4d53ee97ad0311a6",
        "name": "link out 1",
        "mode": "link",
        "links": [
            "78cd71d4d4914aab"
        ],
        "x": 935,
        "y": 320,
        "wires": []
    },
    {
        "id": "5bef7810bb446303",
        "type": "link out",
        "z": "4d53ee97ad0311a6",
        "name": "link out 2",
        "mode": "link",
        "links": [
            "78cd71d4d4914aab"
        ],
        "x": 955,
        "y": 160,
        "wires": []
    },
    {
        "id": "c8d60c4ef86f2d66",
        "type": "link out",
        "z": "4d53ee97ad0311a6",
        "name": "link out 3",
        "mode": "link",
        "links": [
            "78cd71d4d4914aab"
        ],
        "x": 1395,
        "y": 40,
        "wires": []
    },
    {
        "id": "d613537e97ea8c01",
        "type": "switch",
        "z": "4d53ee97ad0311a6",
        "name": "running?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "shutdown",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "disconnected",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "connected",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 760,
        "y": 40,
        "wires": [
            [
                "203c28e32ea9410f"
            ],
            [],
            []
        ]
    },
    {
        "id": "07f477896215c16f",
        "type": "debug",
        "z": "4d53ee97ad0311a6",
        "name": "debug 6",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 400,
        "wires": []
    },
    {
        "id": "7fde61273056b93f",
        "type": "debug",
        "z": "4d53ee97ad0311a6",
        "name": "debug 10",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 220,
        "wires": []
    },
    {
        "id": "7e6eb8ec88016ca7",
        "type": "inject",
        "z": "4d53ee97ad0311a6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 280,
        "y": 880,
        "wires": [
            [
                "975744eea9044e04"
            ]
        ]
    },
    {
        "id": "975744eea9044e04",
        "type": "function",
        "z": "4d53ee97ad0311a6",
        "name": "Get last data and set status -1",
        "func": "var data_json = global.get(\"live_data\");\n\ndata_json.timestamp = Date.now();\ndata_json.data.status = -1;\ndata_json.data.general_status = -1;\n\nmsg.payload = data_json;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 880,
        "wires": [
            [
                "b840f2b36dafec2c"
            ]
        ]
    },
    {
        "id": "b5a72c23a58af244",
        "type": "inject",
        "z": "4d53ee97ad0311a6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 280,
        "y": 960,
        "wires": [
            [
                "3e6cc1f176ea51f1"
            ]
        ]
    },
    {
        "id": "3e6cc1f176ea51f1",
        "type": "function",
        "z": "4d53ee97ad0311a6",
        "name": "Get last data and set status 0",
        "func": "var data_json = global.get(\"live_data\");\n\ndata_json.timestamp = Date.now();\ndata_json.data.status = 0;\ndata_json.data.general_status = 0;\n\nmsg.payload = data_json;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 960,
        "wires": [
            [
                "b840f2b36dafec2c"
            ]
        ]
    },
    {
        "id": "b840f2b36dafec2c",
        "type": "link out",
        "z": "4d53ee97ad0311a6",
        "name": "link out 4",
        "mode": "link",
        "links": [
            "78cd71d4d4914aab"
        ],
        "x": 725,
        "y": 920,
        "wires": []
    },
    {
        "id": "85a26b29df8bdf63",
        "type": "comment",
        "z": "4d53ee97ad0311a6",
        "name": "Invalid time (fuera de horario)",
        "info": "",
        "x": 320,
        "y": 840,
        "wires": []
    },
    {
        "id": "54f6c9a70d08c7d0",
        "type": "comment",
        "z": "4d53ee97ad0311a6",
        "name": "Starting time (inicio de horario)",
        "info": "",
        "x": 310,
        "y": 1000,
        "wires": []
    },
    {
        "id": "6fd8e239048a712e",
        "type": "inject",
        "z": "4d53ee97ad0311a6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 290,
        "y": 1140,
        "wires": [
            [
                "e3fbd298a12a1490"
            ]
        ]
    },
    {
        "id": "978294c71ea7229a",
        "type": "function",
        "z": "4d53ee97ad0311a6",
        "name": "Get last data",
        "func": "var data_json = global.get(\"live_data\");\n\ndata_json.timestamp = Date.now();\ndata_json.data.status = -1;\ndata_json.data.general_status = -1;\n\nmsg.payload = data_json;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "4cc7986f1c218a3d",
        "type": "comment",
        "z": "4d53ee97ad0311a6",
        "name": "Repetidamente verificamos si ha terminado o empezado el horario",
        "info": "",
        "x": 380,
        "y": 1100,
        "wires": []
    },
    {
        "id": "e3fbd298a12a1490",
        "type": "function",
        "z": "4d53ee97ad0311a6",
        "name": "Verificamos si terminó el horario",
        "func": "var currentDate = new Date(msg.payload);\n\nconst hours = currentDate.getHours();\nmsg.payload = hours\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1140,
        "wires": [
            [
                "978294c71ea7229a",
                "c41ff624c18e7b14"
            ]
        ]
    },
    {
        "id": "c41ff624c18e7b14",
        "type": "debug",
        "z": "4d53ee97ad0311a6",
        "name": "debug 13",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 1100,
        "wires": []
    },
    {
        "id": "5778748aaab07c8a",
        "type": "http in",
        "z": "c767b22b0c185339",
        "name": "",
        "url": "/status-loc",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 120,
        "wires": [
            [
                "aacbe3f2219a851a"
            ]
        ]
    },
    {
        "id": "5cf83d01916db967",
        "type": "http in",
        "z": "c767b22b0c185339",
        "name": "",
        "url": "/speed",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 220,
        "wires": [
            [
                "bcda4bf79c8841e7"
            ]
        ]
    },
    {
        "id": "0bb2b40bfaf61761",
        "type": "http in",
        "z": "c767b22b0c185339",
        "name": "",
        "url": "/load",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 320,
        "wires": [
            [
                "895e8f678748d193"
            ]
        ]
    },
    {
        "id": "bcda4bf79c8841e7",
        "type": "change",
        "z": "c767b22b0c185339",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "live_data.data.gps.speed",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 220,
        "wires": [
            [
                "77b95fd9a868d28b",
                "866a8db99ececb26"
            ]
        ]
    },
    {
        "id": "77b95fd9a868d28b",
        "type": "http response",
        "z": "c767b22b0c185339",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 600,
        "y": 220,
        "wires": []
    },
    {
        "id": "866a8db99ececb26",
        "type": "debug",
        "z": "c767b22b0c185339",
        "name": "debug 7",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 180,
        "wires": []
    },
    {
        "id": "895e8f678748d193",
        "type": "change",
        "z": "c767b22b0c185339",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "live_data.data.load",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 320,
        "wires": [
            [
                "8957fc72439d3a19"
            ]
        ]
    },
    {
        "id": "8957fc72439d3a19",
        "type": "http response",
        "z": "c767b22b0c185339",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 600,
        "y": 320,
        "wires": []
    },
    {
        "id": "61630ed9060d2d08",
        "type": "debug",
        "z": "c767b22b0c185339",
        "name": "debug 8",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 280,
        "wires": []
    },
    {
        "id": "aacbe3f2219a851a",
        "type": "function",
        "z": "c767b22b0c185339",
        "name": "coordinates",
        "func": "var data_json = global.get(\"live_data\");\n\nmsg.payload = [data_json.data.gps.latitude, data_json.data.gps.longitude];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 120,
        "wires": [
            [
                "3c82c4b663a6a8fd",
                "d192818ea11ab8c4"
            ]
        ]
    },
    {
        "id": "3c82c4b663a6a8fd",
        "type": "debug",
        "z": "c767b22b0c185339",
        "name": "debug 9",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 80,
        "wires": []
    },
    {
        "id": "d192818ea11ab8c4",
        "type": "http response",
        "z": "c767b22b0c185339",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 580,
        "y": 120,
        "wires": []
    },
    {
        "id": "910ae679acfe4909",
        "type": "http in",
        "z": "c767b22b0c185339",
        "name": "",
        "url": "/hourmeter",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 420,
        "wires": [
            [
                "5860ff6181353df8"
            ]
        ]
    },
    {
        "id": "3fad90b85ce23aa4",
        "type": "http response",
        "z": "c767b22b0c185339",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 880,
        "y": 420,
        "wires": []
    },
    {
        "id": "e6469f51e99c2c89",
        "type": "http in",
        "z": "c767b22b0c185339",
        "name": "",
        "url": "/status-desc",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 500,
        "wires": [
            [
                "d57aca71b724effe"
            ]
        ]
    },
    {
        "id": "d57aca71b724effe",
        "type": "change",
        "z": "c767b22b0c185339",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "live_data.data.general_status",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 500,
        "wires": [
            [
                "79ebab6c9940c5cc"
            ]
        ]
    },
    {
        "id": "79ebab6c9940c5cc",
        "type": "http response",
        "z": "c767b22b0c185339",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 540,
        "y": 500,
        "wires": []
    },
    {
        "id": "abf058511c979afa",
        "type": "mysql",
        "z": "c767b22b0c185339",
        "mydb": "20aa6fa811d70d43",
        "name": "",
        "x": 480,
        "y": 420,
        "wires": [
            [
                "b8bd4eb52eb10387"
            ]
        ]
    },
    {
        "id": "5860ff6181353df8",
        "type": "function",
        "z": "c767b22b0c185339",
        "name": "function 3",
        "func": "\nmsg.topic = `\n  SELECT * FROM local_data \n  WHERE YEAR(date) = YEAR(CURDATE())\n  ORDER BY date;\n  `;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 420,
        "wires": [
            [
                "abf058511c979afa"
            ]
        ]
    },
    {
        "id": "69005e857c115cbc",
        "type": "debug",
        "z": "c767b22b0c185339",
        "name": "debug 11",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 360,
        "wires": []
    },
    {
        "id": "b8bd4eb52eb10387",
        "type": "function",
        "z": "c767b22b0c185339",
        "name": "function 4",
        "func": "var array_in = msg.payload.map((row) => JSON.parse(row.data));\nvar json = {}\n\nconst hours_total = getCumulatedHours(array_in);\n\nconst hours = Math.floor(hours_total);\nconst minutes = Math.round(60*(hours_total - hours));\n\njson.hours = hours;\njson.minutes = minutes;\nmsg.payload = json;\nreturn msg;\n\n\n\nfunction getCumulatedHours(arr) {\n  let resultado = [];\n  let rindex = 0;\n  let cumHours = 0;\n\n  // Declaramos el primer valor de resultado\n  resultado[rindex] = {\n    fInit: new Date(arr[0].timestamp),\n    fEnd: new Date(arr[0].timestamp),\n    state: arr[0].gstate,\n    hours: 0,\n  };\n  rindex++;\n\n  for (let i = 1; i < arr.length; i++) {\n    if (arr[i].gstate == -1) {\n      continue; // Ignorar intervalos con gstate igual a -1\n    }\n    if (arr[i].gstate !== arr[i - 1].gstate ) {\n      // Cada que hay un cambio declaramos el nuevo item\n      resultado[rindex] = {\n        fInit: new Date(arr[i].timestamp),\n        fEnd: new Date(arr[i].timestamp),\n        state: arr[i].gstate,\n        hours: 0,\n      };\n\n      // Y con ello actualizamos el item anterior\n      resultado[rindex - 1].fEnd = new Date(arr[i].timestamp);\n      resultado[rindex - 1].hours =\n        (resultado[rindex - 1].fEnd.getTime() -\n          resultado[rindex - 1].fInit.getTime()) /\n        (60 * 60 * 1000);\n      if (resultado[rindex - 1].state===1){\n          cumHours += resultado[rindex - 1].hours;\n        }\n      rindex++;\n    }\n  }\n\n  return cumHours;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 420,
        "wires": [
            [
                "69005e857c115cbc",
                "3fad90b85ce23aa4"
            ]
        ]
    },
    {
        "id": "fd284fbddd909a8a",
        "type": "inject",
        "z": "c767b22b0c185339",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 460,
        "wires": [
            [
                "5860ff6181353df8"
            ]
        ]
    }
]