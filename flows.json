[
    {
        "id": "abf430ab9cfee905",
        "type": "tab",
        "label": "INIT",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c767b22b0c185339",
        "type": "tab",
        "label": "HTTP",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "4d53ee97ad0311a6",
        "type": "tab",
        "label": "DATA",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3b4e3447579da6e6",
        "type": "tab",
        "label": "ALERTS",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "cdb670b9eaa04bce",
        "type": "tab",
        "label": "SAMPLE PDF EMAIL",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "63965d808ff1bb6e",
        "type": "subflow",
        "name": "system status ",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 220,
                "y": 180,
                "wires": [
                    {
                        "id": "6b7a1e2406578c48"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1120,
                "y": 280,
                "wires": [
                    {
                        "id": "06bf9a8fac38414e",
                        "port": 0
                    },
                    {
                        "id": "a267e43e7b0ff1fe",
                        "port": 0
                    },
                    {
                        "id": "5b625da5e955d153",
                        "port": 0
                    },
                    {
                        "id": "be18eb5899ee3bb4",
                        "port": 0
                    },
                    {
                        "id": "51d003316aedeaf9",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 1120,
            "y": 40,
            "wires": [
                {
                    "id": "a6149ee2a5074191",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "f168446540142aa7",
        "type": "subflow",
        "name": "Send Alert Mail",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 120,
                "y": 140,
                "wires": [
                    {
                        "id": "2cefa2833ade14aa"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "29a4e15245fd28cd",
        "type": "subflow",
        "name": "Send Monthly Report",
        "info": "",
        "category": "",
        "in": [],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "a383835818b7681a",
        "type": "group",
        "z": "4d53ee97ad0311a6",
        "name": "Guardado de data local",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "3c0cf9d7b9fc8d32",
            "1e54bc9422fc9d45",
            "1a91beaae3b7c29f",
            "0144841910857dd0",
            "dccf3ef5f5ffab03",
            "be1b9be609783b77",
            "78cd71d4d4914aab"
        ],
        "x": 414,
        "y": 459,
        "w": 862,
        "h": 142
    },
    {
        "id": "1b5ad41c50a916b7",
        "type": "group",
        "z": "4d53ee97ad0311a6",
        "name": "DELETE ALL DATA MANUALLY (CAREFULL)",
        "style": {
            "label": true
        },
        "nodes": [
            "72985e3e1550e70a",
            "0259792c6364af43",
            "1ad32e19c0123f3c"
        ],
        "x": 174,
        "y": 679,
        "w": 572,
        "h": 82
    },
    {
        "id": "5c2896b2dfe6eae8",
        "type": "group",
        "z": "3b4e3447579da6e6",
        "name": "Eliminar la Ãºltima fila",
        "style": {
            "label": true
        },
        "nodes": [
            "a6693f48b1fe3511",
            "a28aa19c6b483b73",
            "8d0255f41c13f305"
        ],
        "x": 234,
        "y": 3499,
        "w": 592,
        "h": 82
    },
    {
        "id": "11676a117d696ad7",
        "type": "group",
        "z": "4d53ee97ad0311a6",
        "name": "Eliminar la data de hoy (CAREFULL)",
        "style": {
            "label": true
        },
        "nodes": [
            "7147509423dca685",
            "e8d74cb250c8420a",
            "d96db93b8fdafded"
        ],
        "x": 834,
        "y": 699,
        "w": 572,
        "h": 82
    },
    {
        "id": "20aa6fa811d70d43",
        "type": "MySQLdatabase",
        "name": "",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "acme_db",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "9bcbb125a6d88775",
        "type": "mqtt-broker",
        "name": "ACME_broker",
        "broker": "161.132.39.167",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "1740ff9b61df35b5",
        "type": "mqtt-broker",
        "name": "",
        "broker": "127.0.0.1",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "06bf9a8fac38414e",
        "type": "change",
        "z": "63965d808ff1bb6e",
        "name": "1 - Inoperativo",
        "rules": [
            {
                "t": "set",
                "p": "payload.data.status",
                "pt": "msg",
                "to": "1",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "payload.data.general_status",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 60,
        "wires": [
            [
                "a6149ee2a5074191"
            ]
        ]
    },
    {
        "id": "51d003316aedeaf9",
        "type": "change",
        "z": "63965d808ff1bb6e",
        "name": "2 - En espera sin carga",
        "rules": [
            {
                "t": "set",
                "p": "payload.data.status",
                "pt": "msg",
                "to": "2",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "payload.data.general_status",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 560,
        "wires": [
            [
                "a6149ee2a5074191"
            ]
        ]
    },
    {
        "id": "be18eb5899ee3bb4",
        "type": "change",
        "z": "63965d808ff1bb6e",
        "name": "3 - En espera con carga",
        "rules": [
            {
                "t": "set",
                "p": "payload.data.status",
                "pt": "msg",
                "to": "3",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "payload.data.general_status",
                "pt": "msg",
                "to": "1",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 440,
        "wires": [
            [
                "a6149ee2a5074191"
            ]
        ]
    },
    {
        "id": "5b625da5e955d153",
        "type": "change",
        "z": "63965d808ff1bb6e",
        "name": "4 - Traslado sin carga",
        "rules": [
            {
                "t": "set",
                "p": "payload.data.status",
                "pt": "msg",
                "to": "4",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "payload.data.general_status",
                "pt": "msg",
                "to": "1",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 340,
        "wires": [
            [
                "a6149ee2a5074191"
            ]
        ]
    },
    {
        "id": "a267e43e7b0ff1fe",
        "type": "change",
        "z": "63965d808ff1bb6e",
        "name": "5 - Traslado con carga",
        "rules": [
            {
                "t": "set",
                "p": "payload.data.status",
                "pt": "msg",
                "to": "5",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "payload.data.general_status",
                "pt": "msg",
                "to": "1",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 240,
        "wires": [
            [
                "a6149ee2a5074191"
            ]
        ]
    },
    {
        "id": "6b7a1e2406578c48",
        "type": "switch",
        "z": "63965d808ff1bb6e",
        "name": "mantto?",
        "property": "payload.data.mantto",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 380,
        "y": 180,
        "wires": [
            [
                "06bf9a8fac38414e"
            ],
            [
                "298f1b9461d4fa63"
            ]
        ]
    },
    {
        "id": "298f1b9461d4fa63",
        "type": "switch",
        "z": "63965d808ff1bb6e",
        "name": "movement?",
        "property": "payload.data.gps.speed",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 490,
        "y": 360,
        "wires": [
            [
                "7dd0a7fe3080f78e"
            ],
            [
                "dad146a727a20f0d"
            ]
        ]
    },
    {
        "id": "7dd0a7fe3080f78e",
        "type": "switch",
        "z": "63965d808ff1bb6e",
        "name": "load?",
        "property": "payload.data.load",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0.2",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 630,
        "y": 280,
        "wires": [
            [
                "a267e43e7b0ff1fe"
            ],
            [
                "5b625da5e955d153"
            ]
        ]
    },
    {
        "id": "dad146a727a20f0d",
        "type": "switch",
        "z": "63965d808ff1bb6e",
        "name": "load?",
        "property": "payload.data.load",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0.2",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 630,
        "y": 500,
        "wires": [
            [
                "be18eb5899ee3bb4"
            ],
            [
                "51d003316aedeaf9"
            ]
        ]
    },
    {
        "id": "a6149ee2a5074191",
        "type": "function",
        "z": "63965d808ff1bb6e",
        "name": "function 2",
        "func": "msg.payload = msg.payload.data.status\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "14dfc1031580eebd",
        "type": "e-mail",
        "z": "f168446540142aa7",
        "server": "smtp.office365.com",
        "port": "587",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "secure": false,
        "tls": false,
        "name": "",
        "dname": "",
        "x": 950,
        "y": 140,
        "wires": []
    },
    {
        "id": "d364dedfd6228a7c",
        "type": "mysql",
        "z": "f168446540142aa7",
        "mydb": "20aa6fa811d70d43",
        "name": "",
        "x": 380,
        "y": 140,
        "wires": [
            [
                "edf15e92dcba8819"
            ]
        ]
    },
    {
        "id": "2cefa2833ade14aa",
        "type": "function",
        "z": "f168446540142aa7",
        "name": "function 6",
        "func": "msg.topic = \"SELECT `email` FROM `users` WHERE `rol`='client';\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 140,
        "wires": [
            [
                "d364dedfd6228a7c"
            ]
        ]
    },
    {
        "id": "edf15e92dcba8819",
        "type": "function",
        "z": "f168446540142aa7",
        "name": "getting mails",
        "func": "const emails = msg.payload.map((item) => item.email);\nmsg.payload = emails;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 140,
        "wires": [
            [
                "6fdb1da3e366f9f0"
            ]
        ]
    },
    {
        "id": "6fdb1da3e366f9f0",
        "type": "function",
        "z": "f168446540142aa7",
        "name": "armar el mensaje",
        "func": "msg.topic = \"Alerta de Mantenimiento\";\nmsg.to = msg.payload;\nmsg.from = \"Montacarga 4.0 <notify_krcp_4.0@kmmp.com.pe>\"\nmsg.payload = msg.alert;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 140,
        "wires": [
            [
                "14dfc1031580eebd"
            ]
        ]
    },
    {
        "id": "c166330932de9a38",
        "type": "e-mail",
        "z": "29a4e15245fd28cd",
        "server": "smtp.office365.com",
        "port": "587",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "secure": false,
        "tls": false,
        "name": "",
        "dname": "",
        "x": 910,
        "y": 160,
        "wires": []
    },
    {
        "id": "0e8b7b1f24ea0f34",
        "type": "mysql",
        "z": "29a4e15245fd28cd",
        "mydb": "20aa6fa811d70d43",
        "name": "",
        "x": 340,
        "y": 160,
        "wires": [
            [
                "463be54ccea42acf"
            ]
        ]
    },
    {
        "id": "628c2fd3a8be560c",
        "type": "function",
        "z": "29a4e15245fd28cd",
        "name": "function 19",
        "func": "msg.topic = \"SELECT `email` FROM `users` WHERE `rol`='client';\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 160,
        "wires": [
            [
                "0e8b7b1f24ea0f34"
            ]
        ]
    },
    {
        "id": "463be54ccea42acf",
        "type": "function",
        "z": "29a4e15245fd28cd",
        "name": "getting mails",
        "func": "const emails = msg.payload.map((item) => item.email);\nmsg.payload = emails;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 160,
        "wires": [
            [
                "db02bc6f4c025e82"
            ]
        ]
    },
    {
        "id": "db02bc6f4c025e82",
        "type": "function",
        "z": "29a4e15245fd28cd",
        "name": "armar el mensaje",
        "func": "msg.topic = \"Alerta de Mantenimiento\";\nmsg.to = msg.payload;\nmsg.from = \"Montacarga 4.0 <notify_krcp_4.0@kmmp.com.pe>\"\nmsg.payload = msg.alert;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 160,
        "wires": [
            [
                "c166330932de9a38"
            ]
        ]
    },
    {
        "id": "c3d19c6f376bc860",
        "type": "inject",
        "z": "abf430ab9cfee905",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 140,
        "wires": [
            [
                "47aa21e090081df4"
            ]
        ]
    },
    {
        "id": "47aa21e090081df4",
        "type": "change",
        "z": "abf430ab9cfee905",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "live_data",
                "pt": "global",
                "to": "{\"gateway_key\":\"\",\"timestamp\":0,\"data\":{\"mantto\":\"0\",\"running\":\"0\",\"hourmeter\":0,\"battery\":{\"voltage\":0},\"pressure\":{\"current\":0},\"load\":0}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "e7dbfe52c5a56dda",
        "type": "change",
        "z": "abf430ab9cfee905",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "init_hour",
                "pt": "global",
                "to": "payload.initHour",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "c9ba55fba965e6e8",
        "type": "inject",
        "z": "abf430ab9cfee905",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3600",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 240,
        "wires": [
            [
                "3a95b8e928820723",
                "882e46bfbbab60a8",
                "cd2565342a4a4ff6",
                "e892bcc0c70c9216"
            ]
        ]
    },
    {
        "id": "3a95b8e928820723",
        "type": "function",
        "z": "abf430ab9cfee905",
        "name": "function 5",
        "func": "msg.topic = 'SELECT * FROM `persistent_data` WHERE `tag`= \"schedule\";';\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 240,
        "wires": [
            [
                "187f4d75698b331b"
            ]
        ]
    },
    {
        "id": "51b7029a3f84e81b",
        "type": "change",
        "z": "abf430ab9cfee905",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "end_hour",
                "pt": "global",
                "to": "payload.endHour",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "187f4d75698b331b",
        "type": "mysql",
        "z": "abf430ab9cfee905",
        "mydb": "20aa6fa811d70d43",
        "name": "",
        "x": 440,
        "y": 240,
        "wires": [
            [
                "d77d7b0452183412",
                "25fd87688448e27c"
            ]
        ]
    },
    {
        "id": "f3bfb38cca3f4fe9",
        "type": "debug",
        "z": "abf430ab9cfee905",
        "name": "debug 12",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 140,
        "wires": []
    },
    {
        "id": "d77d7b0452183412",
        "type": "function",
        "z": "abf430ab9cfee905",
        "name": "Parse",
        "func": "msg.payload = JSON.parse(msg.payload[0].json)\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 240,
        "wires": [
            [
                "e7dbfe52c5a56dda",
                "f3bfb38cca3f4fe9",
                "51b7029a3f84e81b",
                "52656a94ddd148a2"
            ]
        ]
    },
    {
        "id": "25fd87688448e27c",
        "type": "debug",
        "z": "abf430ab9cfee905",
        "name": "debug 16",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 160,
        "wires": []
    },
    {
        "id": "52656a94ddd148a2",
        "type": "change",
        "z": "abf430ab9cfee905",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "weekdays",
                "pt": "global",
                "to": "payload.weekdays",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "882e46bfbbab60a8",
        "type": "function",
        "z": "abf430ab9cfee905",
        "name": "function 22",
        "func": "msg.topic = 'SELECT * FROM `persistent_data` WHERE `tag`= \"mant_prevs\";';\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 440,
        "wires": [
            [
                "06bef47be28b2445"
            ]
        ]
    },
    {
        "id": "06bef47be28b2445",
        "type": "mysql",
        "z": "abf430ab9cfee905",
        "mydb": "20aa6fa811d70d43",
        "name": "",
        "x": 460,
        "y": 440,
        "wires": [
            [
                "675037a0d4d5601b"
            ]
        ]
    },
    {
        "id": "675037a0d4d5601b",
        "type": "function",
        "z": "abf430ab9cfee905",
        "name": "Parse",
        "func": "msg.payload = JSON.parse(msg.payload[0].json)\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 440,
        "wires": [
            [
                "cc8c2cf6db14db40"
            ]
        ]
    },
    {
        "id": "cc8c2cf6db14db40",
        "type": "change",
        "z": "abf430ab9cfee905",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "mant_prevs",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "cd2565342a4a4ff6",
        "type": "function",
        "z": "abf430ab9cfee905",
        "name": "function 23",
        "func": "msg.topic = 'SELECT * FROM `persistent_data` WHERE `tag`= \"last_alert_hour\";';\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 520,
        "wires": [
            [
                "32d2bc3da3b7a151"
            ]
        ]
    },
    {
        "id": "32d2bc3da3b7a151",
        "type": "mysql",
        "z": "abf430ab9cfee905",
        "mydb": "20aa6fa811d70d43",
        "name": "",
        "x": 480,
        "y": 520,
        "wires": [
            [
                "e9f058ed420e58f6"
            ]
        ]
    },
    {
        "id": "fe23b5bb22781802",
        "type": "change",
        "z": "abf430ab9cfee905",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "last_alert_hour",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "e9f058ed420e58f6",
        "type": "function",
        "z": "abf430ab9cfee905",
        "name": "Parse",
        "func": "msg.payload = JSON.parse(msg.payload[0].json)\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 520,
        "wires": [
            [
                "fe23b5bb22781802"
            ]
        ]
    },
    {
        "id": "e892bcc0c70c9216",
        "type": "function",
        "z": "abf430ab9cfee905",
        "name": "function 35",
        "func": "msg.topic = 'SELECT * FROM `persistent_data` WHERE `tag`= \"alert_flag\";';\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 580,
        "wires": [
            [
                "7c585caa7ea76b42"
            ]
        ]
    },
    {
        "id": "7c585caa7ea76b42",
        "type": "mysql",
        "z": "abf430ab9cfee905",
        "mydb": "20aa6fa811d70d43",
        "name": "",
        "x": 480,
        "y": 580,
        "wires": [
            [
                "d1db51897abe9e9e"
            ]
        ]
    },
    {
        "id": "5700bf3e98cab23b",
        "type": "change",
        "z": "abf430ab9cfee905",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "alert_flag",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "d1db51897abe9e9e",
        "type": "function",
        "z": "abf430ab9cfee905",
        "name": "Parse",
        "func": "msg.payload = JSON.parse(msg.payload[0].json)\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 580,
        "wires": [
            [
                "5700bf3e98cab23b"
            ]
        ]
    },
    {
        "id": "5778748aaab07c8a",
        "type": "http in",
        "z": "c767b22b0c185339",
        "name": "",
        "url": "/status-loc",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 120,
        "wires": [
            [
                "aacbe3f2219a851a"
            ]
        ]
    },
    {
        "id": "5cf83d01916db967",
        "type": "http in",
        "z": "c767b22b0c185339",
        "name": "",
        "url": "/speed",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 220,
        "wires": [
            [
                "bcda4bf79c8841e7"
            ]
        ]
    },
    {
        "id": "0bb2b40bfaf61761",
        "type": "http in",
        "z": "c767b22b0c185339",
        "name": "",
        "url": "/load",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 320,
        "wires": [
            [
                "895e8f678748d193"
            ]
        ]
    },
    {
        "id": "bcda4bf79c8841e7",
        "type": "change",
        "z": "c767b22b0c185339",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "live_data.data.gps.speed",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 220,
        "wires": [
            [
                "77b95fd9a868d28b",
                "866a8db99ececb26"
            ]
        ]
    },
    {
        "id": "77b95fd9a868d28b",
        "type": "http response",
        "z": "c767b22b0c185339",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 600,
        "y": 220,
        "wires": []
    },
    {
        "id": "866a8db99ececb26",
        "type": "debug",
        "z": "c767b22b0c185339",
        "name": "debug 7",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 180,
        "wires": []
    },
    {
        "id": "895e8f678748d193",
        "type": "change",
        "z": "c767b22b0c185339",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "live_data.data.load",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 320,
        "wires": [
            [
                "8957fc72439d3a19"
            ]
        ]
    },
    {
        "id": "8957fc72439d3a19",
        "type": "http response",
        "z": "c767b22b0c185339",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 600,
        "y": 320,
        "wires": []
    },
    {
        "id": "61630ed9060d2d08",
        "type": "debug",
        "z": "c767b22b0c185339",
        "name": "debug 8",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 280,
        "wires": []
    },
    {
        "id": "aacbe3f2219a851a",
        "type": "function",
        "z": "c767b22b0c185339",
        "name": "coordinates",
        "func": "var data_json = global.get(\"live_data\");\n\nmsg.payload = [data_json.data.gps.latitude, data_json.data.gps.longitude];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 120,
        "wires": [
            [
                "3c82c4b663a6a8fd",
                "d192818ea11ab8c4"
            ]
        ]
    },
    {
        "id": "3c82c4b663a6a8fd",
        "type": "debug",
        "z": "c767b22b0c185339",
        "name": "debug 9",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 80,
        "wires": []
    },
    {
        "id": "d192818ea11ab8c4",
        "type": "http response",
        "z": "c767b22b0c185339",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 580,
        "y": 120,
        "wires": []
    },
    {
        "id": "910ae679acfe4909",
        "type": "http in",
        "z": "c767b22b0c185339",
        "name": "",
        "url": "/hourmeter",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 420,
        "wires": [
            [
                "7aba7d69f860b22f"
            ]
        ]
    },
    {
        "id": "3fad90b85ce23aa4",
        "type": "http response",
        "z": "c767b22b0c185339",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 680,
        "y": 420,
        "wires": []
    },
    {
        "id": "e6469f51e99c2c89",
        "type": "http in",
        "z": "c767b22b0c185339",
        "name": "",
        "url": "/status-desc",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 500,
        "wires": [
            [
                "d57aca71b724effe"
            ]
        ]
    },
    {
        "id": "d57aca71b724effe",
        "type": "change",
        "z": "c767b22b0c185339",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "live_data.data.general_status",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 500,
        "wires": [
            [
                "79ebab6c9940c5cc"
            ]
        ]
    },
    {
        "id": "79ebab6c9940c5cc",
        "type": "http response",
        "z": "c767b22b0c185339",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 540,
        "y": 500,
        "wires": []
    },
    {
        "id": "69005e857c115cbc",
        "type": "debug",
        "z": "c767b22b0c185339",
        "name": "debug 11",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 360,
        "wires": []
    },
    {
        "id": "3e19b02dfb2f35a8",
        "type": "change",
        "z": "c767b22b0c185339",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "hourmeter",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "96cf4ad22575941d",
        "type": "inject",
        "z": "c767b22b0c185339",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "*/1 0-22 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 620,
        "wires": [
            [
                "6a8fe2061ccf6ff6"
            ]
        ]
    },
    {
        "id": "6a8fe2061ccf6ff6",
        "type": "function",
        "z": "c767b22b0c185339",
        "name": "function 7",
        "func": "\nmsg.topic = `\n  SELECT * FROM local_data \n  WHERE YEAR(date) = YEAR(CURDATE())\n  ORDER BY date;\n  `;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 620,
        "wires": [
            [
                "adfa14774f1e9ebf"
            ]
        ]
    },
    {
        "id": "adfa14774f1e9ebf",
        "type": "mysql",
        "z": "c767b22b0c185339",
        "mydb": "20aa6fa811d70d43",
        "name": "",
        "x": 480,
        "y": 620,
        "wires": [
            [
                "416817946d01eebb"
            ]
        ]
    },
    {
        "id": "416817946d01eebb",
        "type": "function",
        "z": "c767b22b0c185339",
        "name": "function 8",
        "func": "var array_in = msg.payload.map((row) => JSON.parse(row.data));\nvar json = {}\n\nconst hours_total = getCumulatedHours(array_in);\n\nconst hours = Math.floor(hours_total);\nconst minutes = Math.floor(60*(hours_total - hours));\n\njson.hours = hours;\njson.minutes = minutes;\nmsg.payload = json;\nreturn msg;\n\n\n\nfunction getCumulatedHours(arr) {\n  let resultado = [];\n  let rindex = 0;\n  let cumHours = 0;\n\n  // Declaramos el primer valor de resultado\n  resultado[rindex] = {\n    fInit: new Date(arr[0].timestamp),\n    fEnd: new Date(arr[0].timestamp),\n    state: Number(arr[0].gstate),\n    hours: 0,\n  };\n  rindex++;\n\n  for (let i = 1; i < arr.length; i++) {\n    // if (arr[i].gstate == -1) {\n      // continue; // Ignorar intervalos con gstate igual a -1\n    // }\n    if (Number(arr[i].gstate) !== Number(arr[i - 1].gstate) ) {\n      // Cada que hay un cambio declaramos el nuevo item\n      resultado[rindex] = {\n        fInit: new Date(arr[i].timestamp),\n        fEnd: new Date(arr[i].timestamp),\n        state: Number(arr[i].gstate),\n        hours: 0,\n      };\n\n      // Y con ello actualizamos el item anterior\n      resultado[rindex - 1].fEnd = new Date(arr[i].timestamp);\n      resultado[rindex - 1].hours =\n        (resultado[rindex - 1].fEnd.getTime() -\n          resultado[rindex - 1].fInit.getTime()) /\n        (60 * 60 * 1000);\n        \n      if (resultado[rindex - 1].state===1){\n          cumHours += resultado[rindex - 1].hours;\n        }\n      rindex++;\n    }\n  }\n\n  return cumHours;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 620,
        "wires": [
            [
                "3e19b02dfb2f35a8"
            ]
        ]
    },
    {
        "id": "7aba7d69f860b22f",
        "type": "change",
        "z": "c767b22b0c185339",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "hourmeter",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 420,
        "wires": [
            [
                "3fad90b85ce23aa4"
            ]
        ]
    },
    {
        "id": "30026e2f5d43c92b",
        "type": "inject",
        "z": "c767b22b0c185339",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 880,
        "wires": [
            [
                "75f192115a55c067"
            ]
        ]
    },
    {
        "id": "75f192115a55c067",
        "type": "function",
        "z": "c767b22b0c185339",
        "name": "function 37",
        "func": "\nmsg.topic = `\n  SELECT * FROM alerts \n  WHERE YEAR(date) = YEAR(CURDATE())\n  ORDER BY date;\n  `;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 880,
        "wires": [
            [
                "ad5c4b22f419cfda"
            ]
        ]
    },
    {
        "id": "ad5c4b22f419cfda",
        "type": "mysql",
        "z": "c767b22b0c185339",
        "mydb": "20aa6fa811d70d43",
        "name": "",
        "x": 540,
        "y": 880,
        "wires": [
            [
                "4e87a7b955bbe20b",
                "b490edabf91ee5fc"
            ]
        ]
    },
    {
        "id": "a14fc501d5529809",
        "type": "debug",
        "z": "c767b22b0c185339",
        "name": "debug 41",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 880,
        "wires": []
    },
    {
        "id": "4e87a7b955bbe20b",
        "type": "function",
        "z": "c767b22b0c185339",
        "name": "function 38",
        "func": "const data = msg.payload;\nconst horarioInicio = global.get(\"init_hour\"); // Hora de inicio del horario de trabajo (por ejemplo, 8:30 AM)\nconst horarioFin = global.get(\"end_hour\");    // Hora de fin del horario de trabajo (por ejemplo, 5:00 PM)\nconst hoursAwayPerDay = horarioInicio + (24-horarioFin);\n\n// FunciÃ³n para calcular la diferencia de horas entre dos timestamps\nfunction calcularDiferenciaHoras(timestampInicio, timestampFin) {\n    const inicio = new Date(timestampInicio);\n    const fin = new Date(timestampFin);\n    const diferenciaMs = fin - inicio;\n    const horas = diferenciaMs / (1000 * 60 * 60); // Convertir de milisegundos a horas\n    const minutos = (horas - Math.floor(horas)) * 60; // Extraer los minutos\n    const horasDecimal = Math.floor(horas) + minutos / 60; // Convertir los minutos a fracciÃ³n de hora y sumarlos a las horas enteras\n    \n    const milisegundosEnUnDia = 1000 * 60 * 60 * 24;\n    const diferenciaDias = Math.floor(diferenciaMs / milisegundosEnUnDia);\n    \n    const finalHours = horasDecimal - (diferenciaDias)*hoursAwayPerDay;\n\n    return finalHours;\n}\n\n// Inicializar variables para almacenar las horas acumuladas\nlet horasCorrectivo = 0;\nlet horasPreventivo = 0;\n\n// Iterar sobre los datos y acumular las horas para cada tipo de mantenimiento\nfor (let i = 0; i < data.length; i++) {\n    const entry = data[i];\n    if (entry.mant_type === \"correctivo\") {\n        if (i + 1 < data.length && data[i + 1].mant_type === \"mant-end\") {\n            horasCorrectivo += calcularDiferenciaHoras(entry.date, data[i + 1].date);\n        }\n    } else if (entry.mant_type === \"mant-end\") {\n        if (i - 1 >= 0 && data[i - 1].mant_type === \"correctivo\") {\n            // Ya hemos contabilizado estas horas al calcular el correctivo\n        } else {\n            horasPreventivo += calcularDiferenciaHoras(data[i - 1].date, entry.date);\n        }\n    }\n}\n\n\nmsg.payload = {\n    \"correctivo\": horasCorrectivo,\n    \"preventivo\": horasPreventivo\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 4,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 880,
        "wires": [
            [
                "a14fc501d5529809"
            ]
        ]
    },
    {
        "id": "b490edabf91ee5fc",
        "type": "function",
        "z": "c767b22b0c185339",
        "name": "function 39",
        "func": "const data = msg.payload;\nconst horarioInicio = global.get(\"init_hour\"); // Hora de inicio del horario de trabajo (por ejemplo, 8:30 AM)\nconst horarioFin = global.get(\"end_hour\");    // Hora de fin del horario de trabajo (por ejemplo, 5:00 PM)\nconst hoursAwayPerDay = horarioInicio + (24 - horarioFin);\n\n// FunciÃ³n para calcular la diferencia de horas entre dos timestamps\nfunction calcularDiferenciaHoras(timestampInicio, timestampFin) {\n    const inicio = new Date(timestampInicio);\n    const fin = new Date(timestampFin);\n    const diferenciaMs = fin - inicio;\n    const horas = diferenciaMs / (1000 * 60 * 60); // Convertir de milisegundos a horas\n    const minutos = (horas - Math.floor(horas)) * 60; // Extraer los minutos\n    const horasDecimal = Math.floor(horas) + minutos / 60; // Convertir los minutos a fracciÃ³n de hora y sumarlos a las horas enteras\n\n    const milisegundosEnUnDia = 1000 * 60 * 60 * 24;\n    const diferenciaDias = Math.floor(diferenciaMs / milisegundosEnUnDia);\n\n    const finalHours = horasDecimal - diferenciaDias * hoursAwayPerDay;\n\n    return finalHours;\n}\n\n// Inicializar un array para almacenar las horas acumuladas por mes\nconst horasPorMes = new Array(12).fill().map(() => ({\n    correctivo: 0,\n    preventivo: 0\n}));\n\n// Iterar sobre los datos y acumular las horas para cada tipo de mantenimiento y mes\nfor (let i = 0; i < data.length; i++) {\n    const entry = data[i];\n    const fecha = new Date(entry.date);\n    const mes = fecha.getMonth(); // Obtener el mes\n\n    if (entry.mant_type === \"correctivo\") {\n        if (i + 1 < data.length && data[i + 1].mant_type === \"mant-end\") {\n            horasPorMes[mes].correctivo += calcularDiferenciaHoras(entry.date, data[i + 1].date);\n        }\n    } else if (entry.mant_type === \"mant-end\") {\n        if (i - 1 >= 0 && data[i - 1].mant_type === \"correctivo\") {\n            // Ya hemos contabilizado estas horas al calcular el correctivo\n        } else {\n            horasPorMes[mes].preventivo += calcularDiferenciaHoras(data[i - 1].date, entry.date);\n        }\n    }\n}\n\n// Preparar el resultado para el mensaje\nconst resultPorMes = horasPorMes.map(mes => ({\n    correctivo: mes.correctivo,\n    preventivo: mes.preventivo\n}));\n\nmsg.payload = resultPorMes;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 4,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 960,
        "wires": [
            [
                "1faccdac558ad269"
            ]
        ]
    },
    {
        "id": "1faccdac558ad269",
        "type": "debug",
        "z": "c767b22b0c185339",
        "name": "debug 42",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 960,
        "wires": []
    },
    {
        "id": "a5111d94f7361a1b",
        "type": "mqtt in",
        "z": "4d53ee97ad0311a6",
        "name": "",
        "topic": "data/combined",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "9bcbb125a6d88775",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 120,
        "y": 120,
        "wires": [
            [
                "7fde61273056b93f",
                "3ce50b04078d067d"
            ]
        ]
    },
    {
        "id": "7ae3fe0e8c7c7fd3",
        "type": "mqtt in",
        "z": "4d53ee97ad0311a6",
        "name": "",
        "topic": "data/offline/save",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "9bcbb125a6d88775",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 80,
        "y": 320,
        "wires": [
            [
                "07f477896215c16f",
                "f8474f24c89f9cf0"
            ]
        ]
    },
    {
        "id": "3c0cf9d7b9fc8d32",
        "type": "function",
        "z": "4d53ee97ad0311a6",
        "g": "a383835818b7681a",
        "name": "function 1",
        "func": "\nmsg.topic = \"INSERT INTO `local_data` (`date`, `data`) VALUES (FROM_UNIXTIME(\" + msg.timestamp/1000 + \"),'\"+ msg.payload + \"');\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 560,
        "wires": [
            [
                "0144841910857dd0",
                "1e54bc9422fc9d45"
            ]
        ]
    },
    {
        "id": "1e54bc9422fc9d45",
        "type": "mysql",
        "z": "4d53ee97ad0311a6",
        "g": "a383835818b7681a",
        "mydb": "20aa6fa811d70d43",
        "name": "",
        "x": 1190,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "1a91beaae3b7c29f",
        "type": "json",
        "z": "4d53ee97ad0311a6",
        "g": "a383835818b7681a",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 810,
        "y": 560,
        "wires": [
            [
                "3c0cf9d7b9fc8d32"
            ]
        ]
    },
    {
        "id": "0144841910857dd0",
        "type": "debug",
        "z": "4d53ee97ad0311a6",
        "g": "a383835818b7681a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 520,
        "wires": []
    },
    {
        "id": "dccf3ef5f5ffab03",
        "type": "debug",
        "z": "4d53ee97ad0311a6",
        "g": "a383835818b7681a",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 500,
        "wires": []
    },
    {
        "id": "be1b9be609783b77",
        "type": "function",
        "z": "4d53ee97ad0311a6",
        "g": "a383835818b7681a",
        "name": "Filter local data",
        "func": "let out_data = {}\n\nmsg.timestamp = msg.payload.timestamp;\nout_data.timestamp = msg.payload.timestamp;\nout_data.latitude = msg.payload.data.gps.latitude;\nout_data.longitude = msg.payload.data.gps.longitude;\nout_data.velocidad = msg.payload.data.gps.speed;\nout_data.carga = msg.payload.data.load;\nout_data.bateria = msg.payload.data.battery.voltage;\n// out_data.presion_bar = msg.payload.pressure_bar;\n// out_data.presion_psi = msg.payload.pressure_psi;\nout_data.state = msg.payload.data.status;\nout_data.gstate = msg.payload.data.general_status;\n\n// out_data.estado =\nmsg.payload = out_data;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 560,
        "wires": [
            [
                "dccf3ef5f5ffab03",
                "1a91beaae3b7c29f"
            ]
        ]
    },
    {
        "id": "72985e3e1550e70a",
        "type": "inject",
        "z": "4d53ee97ad0311a6",
        "g": "1b5ad41c50a916b7",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 280,
        "y": 720,
        "wires": [
            [
                "0259792c6364af43"
            ]
        ]
    },
    {
        "id": "0259792c6364af43",
        "type": "function",
        "z": "4d53ee97ad0311a6",
        "g": "1b5ad41c50a916b7",
        "name": "DELETE ALL",
        "func": "\nmsg.topic = `\n  DELETE FROM local_data;\n`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 720,
        "wires": [
            [
                "1ad32e19c0123f3c"
            ]
        ]
    },
    {
        "id": "1ad32e19c0123f3c",
        "type": "mysql",
        "z": "4d53ee97ad0311a6",
        "g": "1b5ad41c50a916b7",
        "mydb": "20aa6fa811d70d43",
        "name": "",
        "x": 660,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "e3472658b9dd67fe",
        "type": "debug",
        "z": "4d53ee97ad0311a6",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 240,
        "wires": []
    },
    {
        "id": "61ad8801fa7fb43c",
        "type": "function",
        "z": "4d53ee97ad0311a6",
        "name": "last message",
        "func": "\nfunction unixTimestampToHumanReadable(unixTimestamp) {\n  const date = new Date(unixTimestamp);\n  const year = date.getFullYear();\n  const month = (date.getMonth() + 1).toString().padStart(2, '0');\n  const day = date.getDate().toString().padStart(2, '0');\n  const hours = date.getHours().toString().padStart(2, '0');\n  const minutes = date.getMinutes().toString().padStart(2, '0');\n  const seconds = date.getSeconds().toString().padStart(2, '0');\n\n  return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\n}\n\n\nif (msg.payload.timestamp){\nnode.status({ fill: \"green\", shape: \"ring\", text: `${unixTimestampToHumanReadable(msg.payload.timestamp)}`});\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "6b7ae4d6d10b73c4",
        "type": "function",
        "z": "4d53ee97ad0311a6",
        "name": "last message",
        "func": "\nfunction unixTimestampToHumanReadable(unixTimestamp) {\n  const date = new Date(unixTimestamp);\n  const year = date.getFullYear();\n  const month = (date.getMonth() + 1).toString().padStart(2, '0');\n  const day = date.getDate().toString().padStart(2, '0');\n  const hours = date.getHours().toString().padStart(2, '0');\n  const minutes = date.getMinutes().toString().padStart(2, '0');\n  const seconds = date.getSeconds().toString().padStart(2, '0');\n\n  return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\n}\n\nif (msg.payload.timestamp){\nnode.status({ fill: \"green\", shape: \"ring\", text: `${unixTimestampToHumanReadable(msg.payload.timestamp)}`});\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "f8474f24c89f9cf0",
        "type": "switch",
        "z": "4d53ee97ad0311a6",
        "name": "Filter Gateway",
        "property": "payload.gateway_key",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "A13Q6Q",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A13CHH",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A13CF8",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 300,
        "y": 320,
        "wires": [
            [],
            [],
            [
                "6b7ae4d6d10b73c4",
                "9c757b4537f3dedf"
            ]
        ]
    },
    {
        "id": "3ce50b04078d067d",
        "type": "switch",
        "z": "4d53ee97ad0311a6",
        "name": "Filter Gateway",
        "property": "payload.gateway_key",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "A13CHH",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A13Q6Q",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A13CF8",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 320,
        "y": 120,
        "wires": [
            [],
            [],
            [
                "61ad8801fa7fb43c",
                "d096a76f127de332",
                "0d808f5197888b57"
            ]
        ]
    },
    {
        "id": "d096a76f127de332",
        "type": "timeout",
        "z": "4d53ee97ad0311a6",
        "name": "Connection Timeout",
        "outtopic": "",
        "outsafe": "connected",
        "outwarning": "disconnected",
        "outunsafe": "shutdown",
        "warning": "60",
        "timer": "600",
        "repeat": false,
        "again": false,
        "x": 540,
        "y": 60,
        "wires": [
            [
                "16cb2f6ab8de4f88",
                "d613537e97ea8c01"
            ]
        ]
    },
    {
        "id": "0d808f5197888b57",
        "type": "function",
        "z": "4d53ee97ad0311a6",
        "name": "Getting the load from current",
        "func": "var data_json = msg.payload;\nvar current = data_json.data.pressure.current;\nvar est_linear_load = (0.524*current/1000) - 2.92\ndata_json.data.load = Math.max(est_linear_load,0) ;\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 120,
        "wires": [
            [
                "bdbcbf2604da944c"
            ]
        ]
    },
    {
        "id": "bdbcbf2604da944c",
        "type": "subflow:63965d808ff1bb6e",
        "z": "4d53ee97ad0311a6",
        "name": "",
        "x": 780,
        "y": 160,
        "wires": [
            [
                "e3472658b9dd67fe",
                "5bef7810bb446303",
                "03b3e3af982a6cc5",
                "9e7d10c5065b1471"
            ]
        ]
    },
    {
        "id": "b9a8df8301b776a3",
        "type": "subflow:63965d808ff1bb6e",
        "z": "4d53ee97ad0311a6",
        "name": "",
        "x": 800,
        "y": 320,
        "wires": [
            [
                "0dbd5db4020576db"
            ]
        ]
    },
    {
        "id": "9c757b4537f3dedf",
        "type": "function",
        "z": "4d53ee97ad0311a6",
        "name": "Getting the load from current",
        "func": "var data_json = msg.payload;\n\nvar current = data_json.data.pressure.current;\nvar est_linear_load = (0.524*current/1000) - 2.92\ndata_json.data.load = Math.max(est_linear_load,0) ;\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 320,
        "wires": [
            [
                "b9a8df8301b776a3"
            ]
        ]
    },
    {
        "id": "16cb2f6ab8de4f88",
        "type": "debug",
        "z": "4d53ee97ad0311a6",
        "name": "debug 5",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 120,
        "wires": []
    },
    {
        "id": "c32b768a1ed92874",
        "type": "switch",
        "z": "4d53ee97ad0311a6",
        "name": "mantto?",
        "property": "payload.data.mantto",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1080,
        "y": 20,
        "wires": [
            [
                "b1a48dbfdde4df47"
            ],
            [
                "36225553bf8cc8a3"
            ]
        ]
    },
    {
        "id": "203c28e32ea9410f",
        "type": "function",
        "z": "4d53ee97ad0311a6",
        "name": "Get last data",
        "func": "var data_json = global.get(\"live_data\");\n\ndata_json.timestamp = Date.now();\n\nmsg.payload = data_json;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 20,
        "wires": [
            [
                "c32b768a1ed92874"
            ]
        ]
    },
    {
        "id": "b1a48dbfdde4df47",
        "type": "change",
        "z": "4d53ee97ad0311a6",
        "name": "1 - Inoperativo",
        "rules": [
            {
                "t": "set",
                "p": "payload.data.status",
                "pt": "msg",
                "to": "1",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "payload.data.general_status",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1260,
        "y": 20,
        "wires": [
            [
                "c8d60c4ef86f2d66"
            ]
        ]
    },
    {
        "id": "36225553bf8cc8a3",
        "type": "change",
        "z": "4d53ee97ad0311a6",
        "name": "0 - Apagado",
        "rules": [
            {
                "t": "set",
                "p": "payload.data.general_status",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "payload.data.status",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1250,
        "y": 60,
        "wires": [
            [
                "c8d60c4ef86f2d66"
            ]
        ]
    },
    {
        "id": "0dbd5db4020576db",
        "type": "link out",
        "z": "4d53ee97ad0311a6",
        "name": "link out 1",
        "mode": "link",
        "links": [
            "78cd71d4d4914aab"
        ],
        "x": 935,
        "y": 320,
        "wires": []
    },
    {
        "id": "5bef7810bb446303",
        "type": "link out",
        "z": "4d53ee97ad0311a6",
        "name": "link out 2",
        "mode": "link",
        "links": [
            "78cd71d4d4914aab"
        ],
        "x": 975,
        "y": 160,
        "wires": []
    },
    {
        "id": "c8d60c4ef86f2d66",
        "type": "link out",
        "z": "4d53ee97ad0311a6",
        "name": "link out 3",
        "mode": "link",
        "links": [
            "78cd71d4d4914aab"
        ],
        "x": 1395,
        "y": 40,
        "wires": []
    },
    {
        "id": "d613537e97ea8c01",
        "type": "switch",
        "z": "4d53ee97ad0311a6",
        "name": "running?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "shutdown",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "disconnected",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "connected",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 760,
        "y": 40,
        "wires": [
            [
                "203c28e32ea9410f"
            ],
            [],
            []
        ]
    },
    {
        "id": "07f477896215c16f",
        "type": "debug",
        "z": "4d53ee97ad0311a6",
        "name": "debug 6",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 400,
        "wires": []
    },
    {
        "id": "7fde61273056b93f",
        "type": "debug",
        "z": "4d53ee97ad0311a6",
        "name": "debug 10",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 220,
        "wires": []
    },
    {
        "id": "6fd8e239048a712e",
        "type": "inject",
        "z": "4d53ee97ad0311a6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "timestamp",
                "v": "",
                "vt": "date"
            }
        ],
        "repeat": "",
        "crontab": "*/30 0-22 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 1200,
        "wires": [
            [
                "77ab32fdce9d958a"
            ]
        ]
    },
    {
        "id": "4cc7986f1c218a3d",
        "type": "comment",
        "z": "4d53ee97ad0311a6",
        "name": "Repetidamente verificamos si ha terminado o empezado el horario",
        "info": "",
        "x": 520,
        "y": 1080,
        "wires": []
    },
    {
        "id": "e3fbd298a12a1490",
        "type": "function",
        "z": "4d53ee97ad0311a6",
        "name": "TerminÃ³ el horario",
        "func": "var currentDate = new Date(msg.payload);\nconst endHourDecimal = global.get(\"end_hour\");\n\nconst endHour = Math.floor(endHourDecimal);\nconst endMinutes = Math.floor(60*(endHourDecimal-endHour))\n\nconst weekdays = global.get(\"weekdays\");\n\nconst hours = msg.payload.hours;\nconst minutes = msg.payload.minutes;\nconst day = msg.payload.day;\n\n\nif (weekdays[day]){\n    if (hours >= Number(endHour) && minutes >= Number(endMinutes)) {\n        msg.payload = \"TerminÃ³ el horario\"\n        return msg;\n    }\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 1140,
        "wires": [
            [
                "c41ff624c18e7b14",
                "af10acfd9ddae22e"
            ]
        ]
    },
    {
        "id": "c41ff624c18e7b14",
        "type": "debug",
        "z": "4d53ee97ad0311a6",
        "name": "debug 13",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 1060,
        "wires": []
    },
    {
        "id": "af10acfd9ddae22e",
        "type": "function",
        "z": "4d53ee97ad0311a6",
        "name": "Get last data and set status -1",
        "func": "var data_json = global.get(\"live_data\");\n\n\ndata_json[\"timestamp\"] = msg.timestamp;\ndata_json[\"data\"][\"status\"] = -1;\ndata_json[\"data\"][\"general_status\"] = -1;\n\nmsg.timestamp = msg.timestamp;\nmsg.payload = data_json;\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 1140,
        "wires": [
            [
                "24de23b54fab3558",
                "d886d36ba3d3f976"
            ]
        ]
    },
    {
        "id": "a8f32d6eee3e5c59",
        "type": "function",
        "z": "4d53ee97ad0311a6",
        "name": "Get last data and set status 0",
        "func": "var data_json = global.get(\"live_data\");\n\ndata_json[\"timestamp\"] = msg.timestamp;\ndata_json[\"data\"][\"status\"] = 0;\ndata_json[\"data\"][\"general_status\"] = 0;\n\nmsg.timestamp = msg.timestamp;\nmsg.payload = data_json;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 1260,
        "wires": [
            [
                "c3c7a9912087f5d5",
                "d886d36ba3d3f976"
            ]
        ]
    },
    {
        "id": "dabb21e592d235e5",
        "type": "function",
        "z": "4d53ee97ad0311a6",
        "name": "IniciÃ³ el horario",
        "func": "var currentDate = new Date(msg.payload);\n\nconst initHourDecimal = global.get(\"init_hour\");\n\nconst initHour = Math.floor(initHourDecimal);\nconst initMinutes = Math.floor(60 * (initHourDecimal - initHour))\n\n\nconst weekdays = global.get(\"weekdays\");\n\nconst hours = msg.payload.hours;\nconst minutes = msg.payload.minutes;\nconst day = msg.payload.day;\n\n\nif (weekdays[day]){\nif (hours >= Number(initHour) && minutes>=initMinutes && hours < (Number(initHour)+1)) {\n    msg.payload = \"IniciÃ³ el horario\"\n    return msg;\n}\n\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 1260,
        "wires": [
            [
                "a8f32d6eee3e5c59",
                "20c75707d4e98669"
            ]
        ]
    },
    {
        "id": "0e59e33f6164fe07",
        "type": "debug",
        "z": "4d53ee97ad0311a6",
        "name": "debug 17",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 1200,
        "wires": []
    },
    {
        "id": "20c75707d4e98669",
        "type": "debug",
        "z": "4d53ee97ad0311a6",
        "name": "debug 18",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 1320,
        "wires": []
    },
    {
        "id": "7147509423dca685",
        "type": "inject",
        "z": "4d53ee97ad0311a6",
        "g": "11676a117d696ad7",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 940,
        "y": 740,
        "wires": [
            [
                "e8d74cb250c8420a"
            ]
        ]
    },
    {
        "id": "e8d74cb250c8420a",
        "type": "function",
        "z": "4d53ee97ad0311a6",
        "g": "11676a117d696ad7",
        "name": "DELETE TODAY",
        "func": "\nmsg.topic = `\n  DELETE FROM local_data\nWHERE DATE(date) = CURDATE();;\n`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 740,
        "wires": [
            [
                "d96db93b8fdafded"
            ]
        ]
    },
    {
        "id": "d96db93b8fdafded",
        "type": "mysql",
        "z": "4d53ee97ad0311a6",
        "g": "11676a117d696ad7",
        "mydb": "20aa6fa811d70d43",
        "name": "",
        "x": 1320,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "77ab32fdce9d958a",
        "type": "function",
        "z": "4d53ee97ad0311a6",
        "name": "get hours and minutes",
        "func": "var currentDate = new Date(msg.payload);\n\nconst hours = currentDate.getHours();\nconst minutes = currentDate.getMinutes();\nconst day = currentDate.getDay();\n\nmsg.payload = {\n    \"day\": day,\n    \"hours\": hours,\n    \"minutes\": minutes,\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 1200,
        "wires": [
            [
                "dabb21e592d235e5",
                "e3fbd298a12a1490",
                "0e59e33f6164fe07"
            ]
        ]
    },
    {
        "id": "9b5f1a928de24b6a",
        "type": "debug",
        "z": "4d53ee97ad0311a6",
        "name": "debug 29",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 1340,
        "wires": []
    },
    {
        "id": "b27974d395553b20",
        "type": "function",
        "z": "4d53ee97ad0311a6",
        "name": "Date to timestamp",
        "func": "\n// Indique la fecha\nconst year = 2024;\nconst month = 2; // (Enero 1 to Diciembre 12)\nconst day = 29;\nconst hours = 18; // \nconst minutes = 30;\n\nconst timestamp = obtenerTimestampLima(year, month, day, hours, minutes);\n\nmsg.payload = timestamp;\nmsg.timestamp = timestamp;\n\nreturn msg;\n\n\n\n\n\nfunction obtenerTimestampLima(year, month, day, hours, minutes) {\n  // Crear un objeto Date con la fecha y hora proporcionadas en la zona horaria de Lima, PerÃº (UTC-5)\n  const fechaHoraLima = new Date(year, month - 1, day, hours, minutes);\n\n  // Obtener el timestamp en milisegundos\n  const timestampMilisegundos = fechaHoraLima.getTime();\n\n  return timestampMilisegundos;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 1340,
        "wires": [
            [
                "9b5f1a928de24b6a",
                "77ab32fdce9d958a"
            ]
        ]
    },
    {
        "id": "81933a895c32d8ce",
        "type": "inject",
        "z": "4d53ee97ad0311a6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 1340,
        "wires": [
            [
                "b27974d395553b20"
            ]
        ]
    },
    {
        "id": "2b99e9c5affb863e",
        "type": "function",
        "z": "4d53ee97ad0311a6",
        "name": "Send multiple Inits",
        "func": "\n// Indique la fecha\nconst year = 2024;\nconst month = 2; // (Enero 1 to Diciembre 12)\n// const day = 12;\nconst hours = 6; // \nconst minutes = 0;\n\nvar timestamp;\n\n\n// Enviamos de los 12 al 26\nfor (var day = 27; day <= 29; day++) {\n    // Se utiliza una funciÃ³n para encapsular el valor actual de x\n   \n  timestamp = obtenerTimestampLima(year, month, day, hours, minutes)\n\n  node.send({ payload: timestamp,\n  timestamp: timestamp}, false);\n\n\n      \n}\n\nnode.done();\n\n// return msg;\n\n\n\n\n\nfunction obtenerTimestampLima(year, month, day, hours, minutes) {\n  // Crear un objeto Date con la fecha y hora proporcionadas en la zona horaria de Lima, PerÃº (UTC-5)\n  const fechaHoraLima = new Date(year, month - 1, day, hours, minutes);\n\n  // Obtener el timestamp en milisegundos\n  const timestampMilisegundos = fechaHoraLima.getTime();\n\n  return timestampMilisegundos;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 1420,
        "wires": [
            [
                "772c2faf2224fdd0",
                "77ab32fdce9d958a"
            ]
        ]
    },
    {
        "id": "ea0b0a0e1382a7af",
        "type": "inject",
        "z": "4d53ee97ad0311a6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 1420,
        "wires": [
            [
                "2b99e9c5affb863e"
            ]
        ]
    },
    {
        "id": "94143513d0649e4d",
        "type": "function",
        "z": "4d53ee97ad0311a6",
        "name": "Send multiple Ends",
        "func": "\n// Indique la fecha\nconst year = 2024;\nconst month = 2; // (Enero 1 to Diciembre 12)\n// const day = 12;\nconst hours = 18; // \nconst minutes = 30;\n\nvar timestamp;\n\n\n// Enviamos de los 12 al 26\nfor (var day = 27; day <= 29; day++) {\n  // Se utiliza una funciÃ³n para encapsular el valor actual de x\n\n  timestamp = obtenerTimestampLima(year, month, day, hours, minutes)\n\n  node.send({\n    payload: timestamp,\n    timestamp: timestamp\n  }, false);\n\n\n\n}\n\nnode.done();\n\n// return msg;\n\n\n\n\n\nfunction obtenerTimestampLima(year, month, day, hours, minutes) {\n  // Crear un objeto Date con la fecha y hora proporcionadas en la zona horaria de Lima, PerÃº (UTC-5)\n  const fechaHoraLima = new Date(year, month - 1, day, hours, minutes);\n\n  // Obtener el timestamp en milisegundos\n  const timestampMilisegundos = fechaHoraLima.getTime();\n\n  return timestampMilisegundos;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 1480,
        "wires": [
            [
                "0aaceabde2826dd4",
                "77ab32fdce9d958a"
            ]
        ]
    },
    {
        "id": "95b9cb5dfd8f6a20",
        "type": "inject",
        "z": "4d53ee97ad0311a6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 1480,
        "wires": [
            [
                "94143513d0649e4d"
            ]
        ]
    },
    {
        "id": "772c2faf2224fdd0",
        "type": "debug",
        "z": "4d53ee97ad0311a6",
        "name": "debug 30",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 1420,
        "wires": []
    },
    {
        "id": "0aaceabde2826dd4",
        "type": "debug",
        "z": "4d53ee97ad0311a6",
        "name": "debug 31",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 1480,
        "wires": []
    },
    {
        "id": "c3c7a9912087f5d5",
        "type": "debug",
        "z": "4d53ee97ad0311a6",
        "name": "debug 32",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1220,
        "y": 1320,
        "wires": []
    },
    {
        "id": "78cd71d4d4914aab",
        "type": "link in",
        "z": "4d53ee97ad0311a6",
        "g": "a383835818b7681a",
        "name": "save_database",
        "links": [
            "0dbd5db4020576db",
            "5bef7810bb446303",
            "c8d60c4ef86f2d66",
            "b840f2b36dafec2c",
            "d886d36ba3d3f976"
        ],
        "x": 455,
        "y": 560,
        "wires": [
            [
                "be1b9be609783b77"
            ]
        ]
    },
    {
        "id": "d886d36ba3d3f976",
        "type": "link out",
        "z": "4d53ee97ad0311a6",
        "name": "link out 5",
        "mode": "link",
        "links": [
            "78cd71d4d4914aab"
        ],
        "x": 1225,
        "y": 1200,
        "wires": []
    },
    {
        "id": "24de23b54fab3558",
        "type": "debug",
        "z": "4d53ee97ad0311a6",
        "name": "debug 33",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1220,
        "y": 1080,
        "wires": []
    },
    {
        "id": "03b3e3af982a6cc5",
        "type": "link out",
        "z": "4d53ee97ad0311a6",
        "name": "alerts",
        "mode": "link",
        "links": [
            "2023895ec642de9d",
            "2cf8996562728247",
            "1baa91f0171f47da",
            "85db5133148cdcec"
        ],
        "x": 945,
        "y": 200,
        "wires": []
    },
    {
        "id": "6765f0408aaa146f",
        "type": "link out",
        "z": "4d53ee97ad0311a6",
        "name": "end_mant",
        "mode": "link",
        "links": [
            "bd86ae06a782a408"
        ],
        "x": 1415,
        "y": 200,
        "wires": []
    },
    {
        "id": "9e7d10c5065b1471",
        "type": "function",
        "z": "4d53ee97ad0311a6",
        "name": "detect falling edge (acabo el mantenimiento)",
        "func": "const prev_data = global.get(\"live_data\");\nconst current_data = msg.payload;\n\n\n\nif ((Number(current_data.data.mantto)==0) && (Number(prev_data.data.mantto) >=1) ){\n    msg.payload = current_data;\n    global.set(\"live_data\", current_data);\n\n    return msg;\n}\nelse {\n    global.set(\"live_data\", current_data);\n\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 200,
        "wires": [
            [
                "6765f0408aaa146f",
                "975473f531dbc505"
            ]
        ]
    },
    {
        "id": "975473f531dbc505",
        "type": "debug",
        "z": "4d53ee97ad0311a6",
        "name": "debug 40",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1440,
        "y": 320,
        "wires": []
    },
    {
        "id": "e0272e0b0c0c7ecd",
        "type": "inject",
        "z": "3b4e3447579da6e6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 2240,
        "wires": [
            [
                "bb536c1c315511c1"
            ]
        ]
    },
    {
        "id": "2a0c71d007e138d8",
        "type": "inject",
        "z": "3b4e3447579da6e6",
        "name": "Alert BaterÃ­a Baja",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "alert",
                "v": "BaterÃ­a Baja",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 2360,
        "wires": [
            [
                "38c87ace5bd5e323"
            ]
        ]
    },
    {
        "id": "bb536c1c315511c1",
        "type": "subflow:f168446540142aa7",
        "z": "3b4e3447579da6e6",
        "name": "",
        "x": 500,
        "y": 2240,
        "wires": []
    },
    {
        "id": "b9d2b75b87edf072",
        "type": "subflow:f168446540142aa7",
        "z": "3b4e3447579da6e6",
        "name": "",
        "x": 520,
        "y": 2360,
        "wires": []
    },
    {
        "id": "116ab7fc441741df",
        "type": "inject",
        "z": "3b4e3447579da6e6",
        "name": "Inicio de matenimiento",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "alert",
                "v": "Inicio de mantenimiento detectado",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 2600,
        "wires": [
            [
                "d6da7333a0f08043"
            ]
        ]
    },
    {
        "id": "354889054731bce7",
        "type": "subflow:f168446540142aa7",
        "z": "3b4e3447579da6e6",
        "name": "",
        "x": 500,
        "y": 2600,
        "wires": []
    },
    {
        "id": "d6da7333a0f08043",
        "type": "function",
        "z": "3b4e3447579da6e6",
        "name": "function 10",
        "func": "const hourmeter = global.get(\"hourmeter\").hours;\n\n\nmsg.topic = \"INSERT INTO `alerts` (`alert_type`, `hourmeter`, `mant_type`) VALUES (\"+ 1 +\", \"+ hourmeter+\", 'correctivo')\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 2660,
        "wires": [
            [
                "108c22764b8a5109"
            ]
        ]
    },
    {
        "id": "3784c1e26e305b6a",
        "type": "debug",
        "z": "3b4e3447579da6e6",
        "name": "debug 23",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 2660,
        "wires": []
    },
    {
        "id": "108c22764b8a5109",
        "type": "mysql",
        "z": "3b4e3447579da6e6",
        "mydb": "20aa6fa811d70d43",
        "name": "",
        "x": 620,
        "y": 2660,
        "wires": [
            [
                "3784c1e26e305b6a"
            ]
        ]
    },
    {
        "id": "1dd6bc3aaab5c7ae",
        "type": "inject",
        "z": "3b4e3447579da6e6",
        "name": "Fin de matenimiento",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "alert",
                "v": "Fin de mantenimiento detectado",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 270,
        "y": 2720,
        "wires": [
            [
                "8c1e3d03d983e058"
            ]
        ]
    },
    {
        "id": "5ed9d62de94771bd",
        "type": "subflow:f168446540142aa7",
        "z": "3b4e3447579da6e6",
        "name": "",
        "x": 540,
        "y": 2720,
        "wires": []
    },
    {
        "id": "8c1e3d03d983e058",
        "type": "function",
        "z": "3b4e3447579da6e6",
        "name": "function 11",
        "func": "const hourmeter = global.get(\"hourmeter\").hours;\n\n\nmsg.topic = \"INSERT INTO `alerts` (`alert_type`, `hourmeter`, `mant_type`) VALUES (\"+ 2 +\", \"+ hourmeter+\", 'mant-end')\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 2780,
        "wires": [
            [
                "70de6a15584dc94f"
            ]
        ]
    },
    {
        "id": "d9325fd4257db40e",
        "type": "debug",
        "z": "3b4e3447579da6e6",
        "name": "debug 24",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 2780,
        "wires": []
    },
    {
        "id": "70de6a15584dc94f",
        "type": "mysql",
        "z": "3b4e3447579da6e6",
        "mydb": "20aa6fa811d70d43",
        "name": "",
        "x": 660,
        "y": 2780,
        "wires": [
            [
                "d9325fd4257db40e"
            ]
        ]
    },
    {
        "id": "f18398c591ef7b18",
        "type": "inject",
        "z": "3b4e3447579da6e6",
        "name": "Mantenimiento Preventivo 1",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "alert",
                "v": "Mantenimiento Preventivo 1",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 2940,
        "wires": [
            [
                "7a77eb5aaa9c7a43"
            ]
        ]
    },
    {
        "id": "9c3e7c0f7060ea7c",
        "type": "subflow:f168446540142aa7",
        "z": "3b4e3447579da6e6",
        "name": "",
        "x": 540,
        "y": 2940,
        "wires": []
    },
    {
        "id": "7a77eb5aaa9c7a43",
        "type": "function",
        "z": "3b4e3447579da6e6",
        "name": "function 12",
        "func": "const hourmeter = global.get(\"hourmeter\").hours;\n\n\nmsg.topic = \"INSERT INTO `alerts` (`alert_type`, `hourmeter`, `mant_type`) VALUES (\"+ 3 +\", \"+ hourmeter+\", 'prev-alert')\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 3000,
        "wires": [
            [
                "f422073956e2fb92"
            ]
        ]
    },
    {
        "id": "2c3f9e0109d5213a",
        "type": "debug",
        "z": "3b4e3447579da6e6",
        "name": "debug 25",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 3000,
        "wires": []
    },
    {
        "id": "f422073956e2fb92",
        "type": "mysql",
        "z": "3b4e3447579da6e6",
        "mydb": "20aa6fa811d70d43",
        "name": "",
        "x": 660,
        "y": 3000,
        "wires": [
            [
                "2c3f9e0109d5213a"
            ]
        ]
    },
    {
        "id": "c584b9d683e09724",
        "type": "inject",
        "z": "3b4e3447579da6e6",
        "name": "Mantenimiento Preventivo 2",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "alert",
                "v": "Mantenimiento Preventivo 2",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 3140,
        "wires": [
            [
                "cf5866e916a5494e"
            ]
        ]
    },
    {
        "id": "a9c8344afb1b0563",
        "type": "subflow:f168446540142aa7",
        "z": "3b4e3447579da6e6",
        "name": "",
        "x": 540,
        "y": 3140,
        "wires": []
    },
    {
        "id": "cf5866e916a5494e",
        "type": "function",
        "z": "3b4e3447579da6e6",
        "name": "function 13",
        "func": "const hourmeter = global.get(\"hourmeter\").hours;\n\n\nmsg.topic = \"INSERT INTO `alerts` (`alert_type`, `hourmeter`, `mant_type`) VALUES (\"+ 4 +\", \"+ hourmeter+\", 'prev-alert')\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 3200,
        "wires": [
            [
                "d248ef0169518ca6"
            ]
        ]
    },
    {
        "id": "79e0e75dfc7b4d95",
        "type": "debug",
        "z": "3b4e3447579da6e6",
        "name": "debug 26",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 3200,
        "wires": []
    },
    {
        "id": "d248ef0169518ca6",
        "type": "mysql",
        "z": "3b4e3447579da6e6",
        "mydb": "20aa6fa811d70d43",
        "name": "",
        "x": 660,
        "y": 3200,
        "wires": [
            [
                "79e0e75dfc7b4d95"
            ]
        ]
    },
    {
        "id": "f326b8a3aa2498e8",
        "type": "inject",
        "z": "3b4e3447579da6e6",
        "name": "Mantenimiento Preventivo 3",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "alert",
                "v": "Mantenimiento Preventivo 3",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 3300,
        "wires": [
            [
                "009ab18e8fc54453"
            ]
        ]
    },
    {
        "id": "bdf1909ab7f7c476",
        "type": "subflow:f168446540142aa7",
        "z": "3b4e3447579da6e6",
        "name": "",
        "x": 520,
        "y": 3300,
        "wires": []
    },
    {
        "id": "009ab18e8fc54453",
        "type": "function",
        "z": "3b4e3447579da6e6",
        "name": "function 14",
        "func": "const hourmeter = global.get(\"hourmeter\").hours;\n\n\nmsg.topic = \"INSERT INTO `alerts` (`alert_type`, `hourmeter`, `mant_type`) VALUES (\"+ 5 +\", \"+ hourmeter+\", 'prev-alert')\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 3360,
        "wires": [
            [
                "a0a120fce288f53a"
            ]
        ]
    },
    {
        "id": "ab7121c64ef39329",
        "type": "debug",
        "z": "3b4e3447579da6e6",
        "name": "debug 27",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 3360,
        "wires": []
    },
    {
        "id": "a0a120fce288f53a",
        "type": "mysql",
        "z": "3b4e3447579da6e6",
        "mydb": "20aa6fa811d70d43",
        "name": "",
        "x": 640,
        "y": 3360,
        "wires": [
            [
                "ab7121c64ef39329"
            ]
        ]
    },
    {
        "id": "a6693f48b1fe3511",
        "type": "inject",
        "z": "3b4e3447579da6e6",
        "g": "5c2896b2dfe6eae8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 340,
        "y": 3540,
        "wires": [
            [
                "8d0255f41c13f305"
            ]
        ]
    },
    {
        "id": "a28aa19c6b483b73",
        "type": "mysql",
        "z": "3b4e3447579da6e6",
        "g": "5c2896b2dfe6eae8",
        "mydb": "20aa6fa811d70d43",
        "name": "",
        "x": 740,
        "y": 3540,
        "wires": [
            []
        ]
    },
    {
        "id": "8d0255f41c13f305",
        "type": "function",
        "z": "3b4e3447579da6e6",
        "g": "5c2896b2dfe6eae8",
        "name": "function 15",
        "func": "msg.topic = `DELETE FROM alerts\nORDER BY id DESC\nLIMIT 1;`;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 3540,
        "wires": [
            [
                "a28aa19c6b483b73"
            ]
        ]
    },
    {
        "id": "e807d98eb6923ec8",
        "type": "inject",
        "z": "3b4e3447579da6e6",
        "name": "Alert flag 1",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 820,
        "y": 2300,
        "wires": [
            [
                "b92aa9193a6c083b"
            ]
        ]
    },
    {
        "id": "b92aa9193a6c083b",
        "type": "function",
        "z": "3b4e3447579da6e6",
        "name": "function 16",
        "func": "\nmsg.topic = \"UPDATE `persistent_data` SET `json` = '1' WHERE `persistent_data`.`tag` = 'alert_flag'\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 2300,
        "wires": [
            [
                "c80dbf0a49349bc4"
            ]
        ]
    },
    {
        "id": "c80dbf0a49349bc4",
        "type": "mysql",
        "z": "3b4e3447579da6e6",
        "mydb": "20aa6fa811d70d43",
        "name": "",
        "x": 1160,
        "y": 2300,
        "wires": [
            []
        ]
    },
    {
        "id": "7d4705f622cdcf87",
        "type": "inject",
        "z": "3b4e3447579da6e6",
        "name": "Alert flag 0",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 820,
        "y": 2360,
        "wires": [
            [
                "37ff57fb7f915843"
            ]
        ]
    },
    {
        "id": "37ff57fb7f915843",
        "type": "function",
        "z": "3b4e3447579da6e6",
        "name": "function 17",
        "func": "\nmsg.topic = \"UPDATE `persistent_data` SET `json` = '0' WHERE `persistent_data`.`tag` = 'alert_flag'\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 2360,
        "wires": [
            [
                "13d132e6f26d3e18"
            ]
        ]
    },
    {
        "id": "13d132e6f26d3e18",
        "type": "mysql",
        "z": "3b4e3447579da6e6",
        "mydb": "20aa6fa811d70d43",
        "name": "",
        "x": 1160,
        "y": 2360,
        "wires": [
            []
        ]
    },
    {
        "id": "c3941554da79642a",
        "type": "mysql",
        "z": "3b4e3447579da6e6",
        "mydb": "20aa6fa811d70d43",
        "name": "",
        "x": 620,
        "y": 2480,
        "wires": [
            []
        ]
    },
    {
        "id": "c22a29eaf5853603",
        "type": "inject",
        "z": "3b4e3447579da6e6",
        "name": "Alert flag 1",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 280,
        "y": 2480,
        "wires": [
            [
                "38c87ace5bd5e323"
            ]
        ]
    },
    {
        "id": "38c87ace5bd5e323",
        "type": "function",
        "z": "3b4e3447579da6e6",
        "name": "function 18",
        "func": "\nmsg.topic = \"UPDATE `persistent_data` SET `json` = '1' WHERE `persistent_data`.`tag` = 'alert_flag'\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 2480,
        "wires": [
            [
                "c3941554da79642a"
            ]
        ]
    },
    {
        "id": "2023895ec642de9d",
        "type": "link in",
        "z": "3b4e3447579da6e6",
        "name": "link in 1",
        "links": [
            "03b3e3af982a6cc5",
            "bc42315bb66e81d3"
        ],
        "x": 185,
        "y": 360,
        "wires": [
            [
                "ea33fff85d76e410"
            ]
        ]
    },
    {
        "id": "13782c1b8c3b124f",
        "type": "switch",
        "z": "3b4e3447579da6e6",
        "name": "Separate alerts",
        "property": "payload.data.battery.voltage",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lt",
                "v": "10000",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 520,
        "y": 360,
        "wires": [
            [
                "01e05cb63373fd29",
                "485b0fc7d1597f7f",
                "40a9d405071241a7"
            ]
        ]
    },
    {
        "id": "01e05cb63373fd29",
        "type": "change",
        "z": "3b4e3447579da6e6",
        "name": "Alerta baterÃ­a baja",
        "rules": [
            {
                "t": "set",
                "p": "alert_flag",
                "pt": "global",
                "to": "1",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "alert",
                "pt": "msg",
                "to": "BaterÃ­a baja",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 280,
        "wires": [
            [
                "27e54f15b04931d6"
            ]
        ]
    },
    {
        "id": "27e54f15b04931d6",
        "type": "subflow:f168446540142aa7",
        "z": "3b4e3447579da6e6",
        "name": "",
        "x": 1020,
        "y": 280,
        "wires": []
    },
    {
        "id": "320d5cf2f80599d0",
        "type": "inject",
        "z": "3b4e3447579da6e6",
        "name": "test live data",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"gateway_key\":\"A13CF8\",\"timestamp\":1709735858816,\"data\":{\"gps\":{\"pos_valid\":1,\"latitude\":-12.0482761,\"longitude\":-77.1011795,\"altitude\":63.382,\"haccuracy\":3.9,\"speed\":0.664,\"course\":118.68},\"mantto\":\"0\",\"running\":\"1\",\"hourmeter\":0,\"battery\":{\"voltage\":9638},\"pressure\":{\"current\":6199},\"load\":0.32827600000000023,\"status\":0,\"general_status\":0}}",
        "payloadType": "json",
        "x": 190,
        "y": 420,
        "wires": [
            [
                "ea33fff85d76e410"
            ]
        ]
    },
    {
        "id": "ea33fff85d76e410",
        "type": "switch",
        "z": "3b4e3447579da6e6",
        "name": "Alert flag == 0?",
        "property": "alert_flag",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 340,
        "y": 360,
        "wires": [
            [
                "13782c1b8c3b124f",
                "6b51c2cd2eeb2cd2"
            ]
        ]
    },
    {
        "id": "6b51c2cd2eeb2cd2",
        "type": "debug",
        "z": "3b4e3447579da6e6",
        "name": "debug 34",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 420,
        "wires": []
    },
    {
        "id": "485b0fc7d1597f7f",
        "type": "function",
        "z": "3b4e3447579da6e6",
        "name": "function 9",
        "func": "const hourmeter = global.get(\"hourmeter\").hours;\n\n\nmsg.topic = \"INSERT INTO `alerts` (`alert_type`, `hourmeter`, `mant_type`) VALUES (\"+ 0 +\", \"+ hourmeter+\", 'battery')\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 340,
        "wires": [
            [
                "8b590b0d8ab7fa95"
            ]
        ]
    },
    {
        "id": "39c70c14c1524ae1",
        "type": "debug",
        "z": "3b4e3447579da6e6",
        "name": "debug 22",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 320,
        "wires": []
    },
    {
        "id": "8b590b0d8ab7fa95",
        "type": "mysql",
        "z": "3b4e3447579da6e6",
        "mydb": "20aa6fa811d70d43",
        "name": "",
        "x": 960,
        "y": 320,
        "wires": [
            [
                "39c70c14c1524ae1"
            ]
        ]
    },
    {
        "id": "4225a5f74918ed39",
        "type": "mysql",
        "z": "3b4e3447579da6e6",
        "mydb": "20aa6fa811d70d43",
        "name": "",
        "x": 960,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "40a9d405071241a7",
        "type": "function",
        "z": "3b4e3447579da6e6",
        "name": "function 20",
        "func": "\nmsg.topic = \"UPDATE `persistent_data` SET `json` = '1' WHERE `persistent_data`.`tag` = 'alert_flag'\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 380,
        "wires": [
            [
                "4225a5f74918ed39"
            ]
        ]
    },
    {
        "id": "cce1ca94965f7cd2",
        "type": "http in",
        "z": "3b4e3447579da6e6",
        "name": "",
        "url": "/alertflagoff",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 280,
        "y": 80,
        "wires": [
            [
                "628da924c86e1914"
            ]
        ]
    },
    {
        "id": "628da924c86e1914",
        "type": "change",
        "z": "3b4e3447579da6e6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "alert_flag",
                "pt": "global",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 80,
        "wires": [
            [
                "6522b41c6d117d0a"
            ]
        ]
    },
    {
        "id": "6522b41c6d117d0a",
        "type": "http response",
        "z": "3b4e3447579da6e6",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 640,
        "y": 80,
        "wires": []
    },
    {
        "id": "956d30414e5042fc",
        "type": "inject",
        "z": "3b4e3447579da6e6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3600",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 290,
        "y": 600,
        "wires": [
            [
                "99ecd3c30af130b8"
            ]
        ]
    },
    {
        "id": "99ecd3c30af130b8",
        "type": "function",
        "z": "3b4e3447579da6e6",
        "name": "Mantenimiento Preventivo 1",
        "func": "const hour_repetition = global.get(\"mant_prevs\").prev1;\nconst current_hour = global.get(\"hourmeter\").hours;\nconst last_alert_hour = global.get(\"last_alert_hour\");\n\nif (((current_hour%hour_repetition)===0) && (current_hour>last_alert_hour)){\n    return msg;\n}\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 600,
        "wires": [
            [
                "313d3484260210e8",
                "3c377ba0c8a4b636",
                "ed3216c37fb5e668",
                "5efa8713a3fa0df5"
            ]
        ]
    },
    {
        "id": "313d3484260210e8",
        "type": "function",
        "z": "3b4e3447579da6e6",
        "name": "function 24",
        "func": "const hourmeter = global.get(\"hourmeter\").hours;\n\n\nmsg.topic = \"INSERT INTO `alerts` (`alert_type`, `hourmeter`, `mant_type`) VALUES (\"+ 3 +\", \"+ hourmeter+\", 'prev-alert')\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 600,
        "wires": [
            [
                "184d81dec484f382"
            ]
        ]
    },
    {
        "id": "184d81dec484f382",
        "type": "mysql",
        "z": "3b4e3447579da6e6",
        "mydb": "20aa6fa811d70d43",
        "name": "",
        "x": 1000,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "e23aea78333cf0ce",
        "type": "mysql",
        "z": "3b4e3447579da6e6",
        "mydb": "20aa6fa811d70d43",
        "name": "",
        "x": 980,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "3c377ba0c8a4b636",
        "type": "function",
        "z": "3b4e3447579da6e6",
        "name": "function 25",
        "func": "\nmsg.topic = \"UPDATE `persistent_data` SET `json` = '1' WHERE `persistent_data`.`tag` = 'alert_flag'\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 660,
        "wires": [
            [
                "e23aea78333cf0ce"
            ]
        ]
    },
    {
        "id": "ed3216c37fb5e668",
        "type": "change",
        "z": "3b4e3447579da6e6",
        "name": "Mant Preventivo 1",
        "rules": [
            {
                "t": "set",
                "p": "alert_flag",
                "pt": "global",
                "to": "1",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "alert",
                "pt": "msg",
                "to": "Mantenimiento Preventivo 1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 520,
        "wires": [
            [
                "121b31cb9fe38fcc"
            ]
        ]
    },
    {
        "id": "121b31cb9fe38fcc",
        "type": "subflow:f168446540142aa7",
        "z": "3b4e3447579da6e6",
        "name": "",
        "x": 1020,
        "y": 520,
        "wires": []
    },
    {
        "id": "d1f0ea13dc3e218e",
        "type": "inject",
        "z": "3b4e3447579da6e6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3600",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 290,
        "y": 900,
        "wires": [
            [
                "7710be5101e265e5"
            ]
        ]
    },
    {
        "id": "7710be5101e265e5",
        "type": "function",
        "z": "3b4e3447579da6e6",
        "name": "Mantenimiento Preventivo 2",
        "func": "const hour_repetition = global.get(\"mant_prevs\").prev2;\nconst current_hour = global.get(\"hourmeter\").hours;\nconst last_alert_hour = global.get(\"last_alert_hour\");\n\nif (((current_hour%hour_repetition)===0) && (current_hour>last_alert_hour)){\n    return msg;\n}\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 900,
        "wires": [
            [
                "1ff7d26c947a2241",
                "12819860de596d71",
                "5d569bfd9bc9ce99",
                "abadcf9c1557aeb6"
            ]
        ]
    },
    {
        "id": "1ff7d26c947a2241",
        "type": "function",
        "z": "3b4e3447579da6e6",
        "name": "function 26",
        "func": "const hourmeter = global.get(\"hourmeter\").hours;\n\n\nmsg.topic = \"INSERT INTO `alerts` (`alert_type`, `hourmeter`, `mant_type`) VALUES (\"+ 4 +\", \"+ hourmeter+\", 'prev-alert')\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 900,
        "wires": [
            [
                "b59c0c6a6278cbe7"
            ]
        ]
    },
    {
        "id": "b59c0c6a6278cbe7",
        "type": "mysql",
        "z": "3b4e3447579da6e6",
        "mydb": "20aa6fa811d70d43",
        "name": "",
        "x": 980,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "fb30b7ef1887336c",
        "type": "mysql",
        "z": "3b4e3447579da6e6",
        "mydb": "20aa6fa811d70d43",
        "name": "",
        "x": 960,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "12819860de596d71",
        "type": "function",
        "z": "3b4e3447579da6e6",
        "name": "function 27",
        "func": "\nmsg.topic = \"UPDATE `persistent_data` SET `json` = '1' WHERE `persistent_data`.`tag` = 'alert_flag'\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 960,
        "wires": [
            [
                "fb30b7ef1887336c"
            ]
        ]
    },
    {
        "id": "5d569bfd9bc9ce99",
        "type": "change",
        "z": "3b4e3447579da6e6",
        "name": "Mant Preventivo 2",
        "rules": [
            {
                "t": "set",
                "p": "alert_flag",
                "pt": "global",
                "to": "1",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "alert",
                "pt": "msg",
                "to": "Mantenimiento Preventivo 2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 820,
        "wires": [
            [
                "1d31bd657e626544"
            ]
        ]
    },
    {
        "id": "1d31bd657e626544",
        "type": "subflow:f168446540142aa7",
        "z": "3b4e3447579da6e6",
        "name": "",
        "x": 1000,
        "y": 820,
        "wires": []
    },
    {
        "id": "6f2adfc45fe546f8",
        "type": "inject",
        "z": "3b4e3447579da6e6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3600",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 290,
        "y": 1260,
        "wires": [
            [
                "d1971e0b1d6078cf"
            ]
        ]
    },
    {
        "id": "d1971e0b1d6078cf",
        "type": "function",
        "z": "3b4e3447579da6e6",
        "name": "Mantenimiento Preventivo 3",
        "func": "const hour_repetition = global.get(\"mant_prevs\").prev3;\nconst current_hour = global.get(\"hourmeter\").hours;\nconst last_alert_hour = global.get(\"last_alert_hour\");\n\nif (((current_hour%hour_repetition)===0) && (current_hour>last_alert_hour)){\n    return msg;\n}\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 1260,
        "wires": [
            [
                "3d46deab76f37cec",
                "a419b2a2f083aec9",
                "a318e2d164ef81e4",
                "dd34ce892ca45a77",
                "34b2d96fdb61559b"
            ]
        ]
    },
    {
        "id": "3d46deab76f37cec",
        "type": "function",
        "z": "3b4e3447579da6e6",
        "name": "function 28",
        "func": "const hourmeter = global.get(\"hourmeter\").hours;\n\n\nmsg.topic = \"INSERT INTO `alerts` (`alert_type`, `hourmeter`, `mant_type`) VALUES (\"+ 5 +\", \"+ hourmeter+\", 'prev-alert')\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 1260,
        "wires": [
            [
                "e6371e5ec4d364ca"
            ]
        ]
    },
    {
        "id": "e6371e5ec4d364ca",
        "type": "mysql",
        "z": "3b4e3447579da6e6",
        "mydb": "20aa6fa811d70d43",
        "name": "",
        "x": 1000,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "8c34c01dc6dbc30a",
        "type": "mysql",
        "z": "3b4e3447579da6e6",
        "mydb": "20aa6fa811d70d43",
        "name": "",
        "x": 980,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "a419b2a2f083aec9",
        "type": "function",
        "z": "3b4e3447579da6e6",
        "name": "function 29",
        "func": "\nmsg.topic = \"UPDATE `persistent_data` SET `json` = '1' WHERE `persistent_data`.`tag` = 'alert_flag'\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 1320,
        "wires": [
            [
                "8c34c01dc6dbc30a"
            ]
        ]
    },
    {
        "id": "a318e2d164ef81e4",
        "type": "change",
        "z": "3b4e3447579da6e6",
        "name": "Mant Preventivo 3",
        "rules": [
            {
                "t": "set",
                "p": "alert_flag",
                "pt": "global",
                "to": "1",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "alert",
                "pt": "msg",
                "to": "Mantenimiento Preventivo 3",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 1180,
        "wires": [
            [
                "316054441e47488e"
            ]
        ]
    },
    {
        "id": "316054441e47488e",
        "type": "subflow:f168446540142aa7",
        "z": "3b4e3447579da6e6",
        "name": "",
        "x": 1020,
        "y": 1180,
        "wires": []
    },
    {
        "id": "dd34ce892ca45a77",
        "type": "debug",
        "z": "3b4e3447579da6e6",
        "name": "debug 35",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 1360,
        "wires": []
    },
    {
        "id": "34b2d96fdb61559b",
        "type": "change",
        "z": "3b4e3447579da6e6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "last_alert_hour",
                "pt": "global",
                "to": "hourmeter.hours",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 1380,
        "wires": [
            [
                "4f789a69595440f7"
            ]
        ]
    },
    {
        "id": "4f789a69595440f7",
        "type": "function",
        "z": "3b4e3447579da6e6",
        "name": "function 30",
        "func": "const last_hour_alert = global.get(\"last_alert_hour\");\nmsg.topic = \"UPDATE `persistent_data` SET `json` = \"+ last_hour_alert +\" WHERE `persistent_data`.`tag` = 'last_alert_hour'\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 1380,
        "wires": [
            [
                "951d84990846c7ba"
            ]
        ]
    },
    {
        "id": "951d84990846c7ba",
        "type": "mysql",
        "z": "3b4e3447579da6e6",
        "mydb": "20aa6fa811d70d43",
        "name": "",
        "x": 1200,
        "y": 1380,
        "wires": [
            []
        ]
    },
    {
        "id": "abadcf9c1557aeb6",
        "type": "change",
        "z": "3b4e3447579da6e6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "last_alert_hour",
                "pt": "global",
                "to": "hourmeter.hours",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 1020,
        "wires": [
            [
                "09e010550167ac5e"
            ]
        ]
    },
    {
        "id": "09e010550167ac5e",
        "type": "function",
        "z": "3b4e3447579da6e6",
        "name": "function 31",
        "func": "const last_hour_alert = global.get(\"last_alert_hour\");\nmsg.topic = \"UPDATE `persistent_data` SET `json` = \"+ last_hour_alert +\" WHERE `persistent_data`.`tag` = 'last_alert_hour'\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 1020,
        "wires": [
            [
                "40cdb5b4d17cb1d9"
            ]
        ]
    },
    {
        "id": "40cdb5b4d17cb1d9",
        "type": "mysql",
        "z": "3b4e3447579da6e6",
        "mydb": "20aa6fa811d70d43",
        "name": "",
        "x": 1180,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "5efa8713a3fa0df5",
        "type": "change",
        "z": "3b4e3447579da6e6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "last_alert_hour",
                "pt": "global",
                "to": "hourmeter.hours",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 720,
        "wires": [
            [
                "63895085fbae2ee9"
            ]
        ]
    },
    {
        "id": "63895085fbae2ee9",
        "type": "function",
        "z": "3b4e3447579da6e6",
        "name": "function 32",
        "func": "const last_hour_alert = global.get(\"last_alert_hour\");\nmsg.topic = \"UPDATE `persistent_data` SET `json` = \"+ last_hour_alert +\" WHERE `persistent_data`.`tag` = 'last_alert_hour'\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 720,
        "wires": [
            [
                "38d183fc32b6c2d0"
            ]
        ]
    },
    {
        "id": "38d183fc32b6c2d0",
        "type": "mysql",
        "z": "3b4e3447579da6e6",
        "mydb": "20aa6fa811d70d43",
        "name": "",
        "x": 1160,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "2cf8996562728247",
        "type": "link in",
        "z": "3b4e3447579da6e6",
        "name": "link in 2",
        "links": [
            "03b3e3af982a6cc5",
            "bc42315bb66e81d3"
        ],
        "x": 155,
        "y": 1640,
        "wires": [
            [
                "5bee586bba10cee9"
            ]
        ]
    },
    {
        "id": "cff33b459d38937d",
        "type": "switch",
        "z": "3b4e3447579da6e6",
        "name": "Get If mantto on",
        "property": "payload.data.mantto",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 520,
        "y": 1640,
        "wires": [
            [
                "cecd631c7dd29d6a",
                "6806784ba8e6d99b",
                "2e48e1866423bdd0"
            ]
        ]
    },
    {
        "id": "cecd631c7dd29d6a",
        "type": "change",
        "z": "3b4e3447579da6e6",
        "name": "Alerta Mantenimiento",
        "rules": [
            {
                "t": "set",
                "p": "alert_flag",
                "pt": "global",
                "to": "1",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "alert",
                "pt": "msg",
                "to": "Llave de mantenimiento activada",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 1560,
        "wires": [
            [
                "857eab071334da6a"
            ]
        ]
    },
    {
        "id": "857eab071334da6a",
        "type": "subflow:f168446540142aa7",
        "z": "3b4e3447579da6e6",
        "name": "",
        "x": 990,
        "y": 1560,
        "wires": []
    },
    {
        "id": "35a264ba957642c5",
        "type": "inject",
        "z": "3b4e3447579da6e6",
        "name": "test live data",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"gateway_key\":\"A13CF8\",\"timestamp\":1709735858816,\"data\":{\"gps\":{\"pos_valid\":1,\"latitude\":-12.0482761,\"longitude\":-77.1011795,\"altitude\":63.382,\"haccuracy\":3.9,\"speed\":0.664,\"course\":118.68},\"mantto\":\"1\",\"running\":\"1\",\"hourmeter\":0,\"battery\":{\"voltage\":14038},\"pressure\":{\"current\":6199},\"load\":0.32827600000000023,\"status\":0,\"general_status\":0}}",
        "payloadType": "json",
        "x": 160,
        "y": 1700,
        "wires": [
            [
                "5bee586bba10cee9"
            ]
        ]
    },
    {
        "id": "5bee586bba10cee9",
        "type": "switch",
        "z": "3b4e3447579da6e6",
        "name": "Alert flag == 0?",
        "property": "alert_flag",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 310,
        "y": 1640,
        "wires": [
            [
                "cff33b459d38937d",
                "214efd2d2c400799"
            ]
        ]
    },
    {
        "id": "214efd2d2c400799",
        "type": "debug",
        "z": "3b4e3447579da6e6",
        "name": "debug 36",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 1700,
        "wires": []
    },
    {
        "id": "6806784ba8e6d99b",
        "type": "function",
        "z": "3b4e3447579da6e6",
        "name": "function 33",
        "func": "const hourmeter = global.get(\"hourmeter\").hours;\n\n\nmsg.topic = \"INSERT INTO `alerts` (`alert_type`, `hourmeter`, `mant_type`) VALUES (\" + 1 + \", \" + hourmeter + \", 'correctivo')\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1620,
        "wires": [
            [
                "6485ebb98a5691f5"
            ]
        ]
    },
    {
        "id": "8bd5a9b3437d9491",
        "type": "debug",
        "z": "3b4e3447579da6e6",
        "name": "debug 37",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 1600,
        "wires": []
    },
    {
        "id": "6485ebb98a5691f5",
        "type": "mysql",
        "z": "3b4e3447579da6e6",
        "mydb": "20aa6fa811d70d43",
        "name": "",
        "x": 930,
        "y": 1600,
        "wires": [
            [
                "8bd5a9b3437d9491"
            ]
        ]
    },
    {
        "id": "9fa41cf8023b6c15",
        "type": "mysql",
        "z": "3b4e3447579da6e6",
        "mydb": "20aa6fa811d70d43",
        "name": "",
        "x": 930,
        "y": 1660,
        "wires": [
            []
        ]
    },
    {
        "id": "2e48e1866423bdd0",
        "type": "function",
        "z": "3b4e3447579da6e6",
        "name": "function 34",
        "func": "\nmsg.topic = \"UPDATE `persistent_data` SET `json` = '1' WHERE `persistent_data`.`tag` = 'alert_flag'\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 1660,
        "wires": [
            [
                "9fa41cf8023b6c15"
            ]
        ]
    },
    {
        "id": "6b16b223437b2845",
        "type": "http in",
        "z": "3b4e3447579da6e6",
        "name": "",
        "url": "/alertflagon",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 280,
        "y": 140,
        "wires": [
            [
                "d580bf80bdb6b4c2"
            ]
        ]
    },
    {
        "id": "d580bf80bdb6b4c2",
        "type": "change",
        "z": "3b4e3447579da6e6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "alert_flag",
                "pt": "global",
                "to": "1",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 140,
        "wires": [
            [
                "69a0e5670166ec12"
            ]
        ]
    },
    {
        "id": "69a0e5670166ec12",
        "type": "http response",
        "z": "3b4e3447579da6e6",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 640,
        "y": 140,
        "wires": []
    },
    {
        "id": "9a5c816efcb79168",
        "type": "switch",
        "z": "3b4e3447579da6e6",
        "name": "Get If mantto off ",
        "property": "payload.data.mantto",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 500,
        "y": 1900,
        "wires": [
            [
                "c66ee13f861a778d",
                "aeeeeaa820d14715"
            ]
        ]
    },
    {
        "id": "c66ee13f861a778d",
        "type": "change",
        "z": "3b4e3447579da6e6",
        "name": "Fin Mantenimiento",
        "rules": [
            {
                "t": "set",
                "p": "alert",
                "pt": "msg",
                "to": "Llave de mantenimiento desactivada",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 1840,
        "wires": [
            [
                "d894aeb38a061151"
            ]
        ]
    },
    {
        "id": "d894aeb38a061151",
        "type": "subflow:f168446540142aa7",
        "z": "3b4e3447579da6e6",
        "name": "",
        "x": 960,
        "y": 1840,
        "wires": []
    },
    {
        "id": "63641b54cf6f1cea",
        "type": "inject",
        "z": "3b4e3447579da6e6",
        "name": "test live data",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"gateway_key\":\"A13CF8\",\"timestamp\":1709735858816,\"data\":{\"gps\":{\"pos_valid\":1,\"latitude\":-12.0482761,\"longitude\":-77.1011795,\"altitude\":63.382,\"haccuracy\":3.9,\"speed\":0.664,\"course\":118.68},\"mantto\":\"0\",\"running\":\"1\",\"hourmeter\":0,\"battery\":{\"voltage\":14038},\"pressure\":{\"current\":6199},\"load\":0.32827600000000023,\"status\":0,\"general_status\":0}}",
        "payloadType": "json",
        "x": 230,
        "y": 1960,
        "wires": [
            [
                "9a5c816efcb79168"
            ]
        ]
    },
    {
        "id": "b2ea93b110423553",
        "type": "debug",
        "z": "3b4e3447579da6e6",
        "name": "debug 39",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 1900,
        "wires": []
    },
    {
        "id": "9a50f64d64597aaa",
        "type": "mysql",
        "z": "3b4e3447579da6e6",
        "mydb": "20aa6fa811d70d43",
        "name": "",
        "x": 900,
        "y": 1900,
        "wires": [
            [
                "b2ea93b110423553"
            ]
        ]
    },
    {
        "id": "bd86ae06a782a408",
        "type": "link in",
        "z": "3b4e3447579da6e6",
        "name": "link in 3",
        "links": [
            "6765f0408aaa146f"
        ],
        "x": 155,
        "y": 1900,
        "wires": [
            [
                "9a5c816efcb79168"
            ]
        ]
    },
    {
        "id": "aeeeeaa820d14715",
        "type": "function",
        "z": "3b4e3447579da6e6",
        "name": "function 36",
        "func": "const hourmeter = global.get(\"hourmeter\").hours;\n\n\nmsg.topic = \"INSERT INTO `alerts` (`alert_type`, `hourmeter`, `mant_type`) VALUES (\"+ 2 +\", \"+ hourmeter+\", 'mant-end')\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1900,
        "wires": [
            [
                "9a50f64d64597aaa"
            ]
        ]
    },
    {
        "id": "7097cd6ffe951032",
        "type": "function",
        "z": "cdb670b9eaa04bce",
        "name": "PDF Email",
        "func": "const month = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\",\n]\nconst d = new Date()\nconst year = d.getFullYear()\nlet name_of_month = month[d.getMonth()]\nmsg.topic = \"Sample Email \" + name_of_month + \" \" + year\nmsg.filename = \"Sample PDF\" + name_of_month + \".pdf\"\nmsg.description =\n  `Attached is the 'PDF report' for ` +\n  name_of_month +\n  ` ` +\n  year +\n  `.\n  \n  Best,\n  Team Prescient\n  `\n\nvar fonts = {\n  Roboto: {\n    normal: \"Courier\",\n    bold: \"Courier-Bold\",\n    italics: \"Courier-Oblique\",\n    bolditalics: \"Courier-BoldOblique\",\n  },\n  Helvetica: {\n    normal: \"Helvetica\",\n    bold: \"Helvetica-Bold\",\n    italics: \"Helvetica-Oblique\",\n    bolditalics: \"Helvetica-BoldOblique\",\n  },\n  Times: {\n    normal: \"Times-Roman\",\n    bold: \"Times-Bold\",\n    italics: \"Times-Italic\",\n    bolditalics: \"Times-BoldItalic\",\n  },\n  Symbol: {\n    normal: \"Symbol\",\n  },\n  ZapfDingbats: {\n    normal: \"ZapfDingbats\",\n  },\n}\n\nconst { Base64Encode } = base64Encode\n\nasync function getPDFBase64Text(pdfDoc) {\n  return new Promise((resolve) => {\n    var base64String = \"\"\n    const stream = pdfDoc.pipe(new Base64Encode())\n    pdfDoc.end()\n\n    stream.on(\"data\", (chunk) => {\n      base64String += chunk\n    })\n\n    stream.on(\"end\", () => resolve(base64String))\n  })\n}\n\nlet printer = new pdfmake(fonts)\n\n\nvar dd = {\n\tcontent: [\n\t\t'First paragraph',\n\t\t'Another paragraph, this time a little bit longer to make sure, this line will be divided into at least two lines'\n\t]\n\t\n}\n\nlet pdfDoc = printer.createPdfKitDocument(dd)\nconst base64Text = await getPDFBase64Text(pdfDoc)\nmsg.payload = Buffer.from(base64Text, \"base64\")\nreturn msg\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "base64Encode",
                "module": "base64-stream"
            },
            {
                "var": "pdfmake",
                "module": "pdfmake"
            }
        ],
        "x": 530,
        "y": 280,
        "wires": [
            [
                "e9168390b1d67fab"
            ]
        ]
    },
    {
        "id": "e9168390b1d67fab",
        "type": "e-mail",
        "z": "cdb670b9eaa04bce",
        "server": "smtp.office365.com",
        "port": "587",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "secure": false,
        "tls": false,
        "name": "delpiero22.flores@gmail.com",
        "dname": "",
        "x": 820,
        "y": 280,
        "wires": []
    },
    {
        "id": "b66c3ffa0ca10ce5",
        "type": "inject",
        "z": "cdb670b9eaa04bce",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 280,
        "y": 300,
        "wires": [
            [
                "7097cd6ffe951032"
            ]
        ]
    }
]